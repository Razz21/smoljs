{"version":3,"file":"index.min.js","sources":["../src/events.ts","../src/utils/arrays.ts","../src/utils/functions.ts","../src/utils/nodes-equal.ts","../src/utils/objects.ts","../src/utils/shared.ts","../src/utils/strings.ts","../src/attributes.ts","../src/mount-dom.ts","../src/patch-dom/patch-attrs.ts","../src/patch-dom/patch-classes.ts","../src/patch-dom/patch-events.ts","../src/patch-dom/patch-styles.ts","../src/patch-dom/patch-dom.ts","../../../node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js","../src/component/component.ts","../src/component/defineComponent.ts","../src/vdom/helpers/index.ts","../src/vdom/vnode.ts","../src/destroy-dom.ts","../src/h.ts","../src/app.ts","../src/components/fragment.ts"],"sourcesContent":["import type { Component } from '@/component';\r\nimport type { AnyFunction } from '@/types';\r\nimport type { ElementVNodeListeners } from '@/vdom';\r\n\r\nexport function addEventListener(\r\n  eventName: string,\r\n  handler: AnyFunction,\r\n  element: Element,\r\n  hostComponent: Component<unknown, unknown> = null\r\n) {\r\n  const wrappedHandler: EventListener = (...args) => {\r\n    hostComponent ? handler.apply(hostComponent, args) : handler(...args);\r\n  };\r\n  element.addEventListener(eventName, wrappedHandler);\r\n  return wrappedHandler;\r\n}\r\n\r\nexport function addEventListeners(\r\n  eventListeners: ElementVNodeListeners = {},\r\n  element: Element,\r\n  hostComponent: Component<unknown, unknown> = null\r\n) {\r\n  const activeListeners: ElementVNodeListeners = {};\r\n\r\n  Object.entries(eventListeners).forEach(([eventName, handler]) => {\r\n    const listener = addEventListener(eventName, handler, element, hostComponent);\r\n    activeListeners[eventName] = listener;\r\n  });\r\n\r\n  return activeListeners;\r\n}\r\n\r\nexport function removeEventListeners(eventListeners: ElementVNodeListeners, element: Element) {\r\n  Object.entries(eventListeners).forEach(([eventName, handler]) => {\r\n    element.removeEventListener(eventName, handler);\r\n  });\r\n}\r\n","import type { Nullable } from '@/types';\r\n\r\nexport function filterNonNullable<T>(arr: ReadonlyArray<Nullable<T>>): T[] {\r\n  return arr.filter((value): value is T => value != null);\r\n}\r\n\r\nexport function calculateArrayDifference<T>(\r\n  originalArray: ReadonlyArray<T>,\r\n  updatedArray: ReadonlyArray<T>\r\n): { added: T[]; removed: T[] } {\r\n  return {\r\n    added: updatedArray.filter((element) => !originalArray.includes(element)),\r\n    removed: originalArray.filter((element) => !updatedArray.includes(element)),\r\n  };\r\n}\r\n\r\nexport const ArrayDiffOperationType = {\r\n  ADD: 'add',\r\n  REMOVE: 'remove',\r\n  MOVE: 'move',\r\n  NOOP: 'noop',\r\n} as const;\r\n\r\ntype ArrayOperation<T> = {\r\n  op: (typeof ArrayDiffOperationType)[keyof typeof ArrayDiffOperationType];\r\n  index: number;\r\n  from?: number;\r\n  item: T;\r\n  originalIndex?: number;\r\n};\r\n\r\nexport class IndexedArrayTracker<T> {\r\n  #trackedArray: T[];\r\n  #originalItemIndices: number[];\r\n  #compareFn: (a: T, b: T) => boolean;\r\n\r\n  constructor(array: ReadonlyArray<T>, compareFn: (a: T, b: T) => boolean) {\r\n    this.#trackedArray = [...array];\r\n    this.#originalItemIndices = array.map((_, i) => i);\r\n    this.#compareFn = compareFn;\r\n  }\r\n\r\n  get length() {\r\n    return this.#trackedArray.length;\r\n  }\r\n\r\n  isRemovedFromArray(currentIndex: number, updatedArray: ReadonlyArray<T>): boolean {\r\n    if (currentIndex >= this.length) return false;\r\n    const compareFn = this.#compareFn;\r\n    const trackedArray = this.#trackedArray;\r\n    return !updatedArray.some((updatedItem) => compareFn(trackedArray[currentIndex], updatedItem));\r\n  }\r\n\r\n  isUnchangedItem(currentIndex: number, updatedArray: ReadonlyArray<T>): boolean {\r\n    if (currentIndex >= this.length) return false;\r\n    return this.#compareFn(this.#trackedArray[currentIndex], updatedArray[currentIndex]);\r\n  }\r\n\r\n  removeItem(currentIndex: number): ArrayOperation<T> {\r\n    const [item] = this.#trackedArray.splice(currentIndex, 1);\r\n    const [originalIndex] = this.#originalItemIndices.splice(currentIndex, 1);\r\n    return {\r\n      op: ArrayDiffOperationType.REMOVE,\r\n      index: currentIndex,\r\n      item,\r\n      originalIndex,\r\n    };\r\n  }\r\n\r\n  addItem(currentItem: T, currentIndex: number): ArrayOperation<T> {\r\n    this.#trackedArray.splice(currentIndex, 0, currentItem);\r\n    this.#originalItemIndices.splice(currentIndex, 0, -1);\r\n    return {\r\n      op: ArrayDiffOperationType.ADD,\r\n      index: currentIndex,\r\n      item: currentItem,\r\n    };\r\n  }\r\n\r\n  moveItem(currentItem: T, index: number): ArrayOperation<T> {\r\n    const fromIndex = this.#trackedArray.findIndex((item) => this.#compareFn(item, currentItem));\r\n    if (fromIndex === -1) throw new Error('Item not found');\r\n    const [movedItem] = this.#trackedArray.splice(fromIndex, 1);\r\n    const [originalIndex] = this.#originalItemIndices.splice(fromIndex, 1);\r\n\r\n    this.#trackedArray.splice(index, 0, movedItem);\r\n    this.#originalItemIndices.splice(index, 0, originalIndex);\r\n\r\n    return {\r\n      op: ArrayDiffOperationType.MOVE,\r\n      from: fromIndex,\r\n      index,\r\n      item: movedItem,\r\n      originalIndex,\r\n    };\r\n  }\r\n\r\n  removeRemainingItems(fromIndex: number): ArrayOperation<T>[] {\r\n    const operations = [];\r\n    while (this.length > fromIndex) {\r\n      operations.push(this.removeItem(fromIndex));\r\n    }\r\n    return operations;\r\n  }\r\n\r\n  findItemIndex(item: T, fromIndex: number): number {\r\n    const length = this.length;\r\n    const compareFn = this.#compareFn;\r\n    const trackedArray = this.#trackedArray;\r\n\r\n    if (fromIndex < 0 || fromIndex >= length) {\r\n      return -1;\r\n    }\r\n    for (let i = fromIndex; i < length; i++) {\r\n      if (compareFn(item, trackedArray[i])) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  noopItem(index: number): ArrayOperation<T> {\r\n    return {\r\n      op: ArrayDiffOperationType.NOOP,\r\n      index,\r\n      item: this.#trackedArray[index],\r\n      originalIndex: this.#originalItemIndices[index],\r\n    };\r\n  }\r\n}\r\n\r\nexport function generateArrayTransformationSequence<T>(\r\n  originalArray: ReadonlyArray<T>,\r\n  updatedArray: ReadonlyArray<T>,\r\n  compareFn: (a: T, b: T) => boolean = (a, b) => a === b\r\n) {\r\n  const transformationSteps: ArrayOperation<T>[] = [];\r\n  const tracker = new IndexedArrayTracker(originalArray, compareFn);\r\n\r\n  for (let currentIndex = 0; currentIndex < updatedArray.length; currentIndex++) {\r\n    const currentItem = updatedArray[currentIndex];\r\n\r\n    if (tracker.isRemovedFromArray(currentIndex, updatedArray)) {\r\n      transformationSteps.push(tracker.removeItem(currentIndex));\r\n      currentIndex--;\r\n      continue;\r\n    }\r\n\r\n    if (tracker.isUnchangedItem(currentIndex, updatedArray)) {\r\n      transformationSteps.push(tracker.noopItem(currentIndex));\r\n      continue;\r\n    }\r\n\r\n    if (tracker.findItemIndex(currentItem, currentIndex) === -1) {\r\n      transformationSteps.push(tracker.addItem(currentItem, currentIndex));\r\n      continue;\r\n    }\r\n\r\n    transformationSteps.push(tracker.moveItem(currentItem, currentIndex));\r\n  }\r\n\r\n  transformationSteps.push(...tracker.removeRemainingItems(updatedArray.length));\r\n  return transformationSteps;\r\n}\r\n","export function noOp() {}\r\n","import type { VNode } from '@/vdom';\r\n\r\nexport function areVNodeNodesEqual(nodeA: VNode, nodeB: VNode): boolean {\r\n  if (nodeA.type !== nodeB.type) {\r\n    return false;\r\n  }\r\n\r\n  const {\r\n    type: typeA,\r\n    props: { key: keyA },\r\n  } = nodeA;\r\n  const {\r\n    type: typeB,\r\n    props: { key: keyB },\r\n  } = nodeB as typeof nodeA;\r\n\r\n  // TODO: test performance of this approach\r\n  return typeA === typeB && keyA === keyB;\r\n}\r\n","export function objectsDiff<T extends Record<string, any>, U extends Record<string, any>>(\r\n  oldObj: T = {} as T,\r\n  newObj: U = {} as U\r\n) {\r\n  const oldKeys = Object.keys(oldObj);\r\n  const newKeys = Object.keys(newObj);\r\n\r\n  return {\r\n    added: newKeys.filter((key) => !(key in oldObj)),\r\n    removed: oldKeys.filter((key) => !(key in newObj)),\r\n    updated: newKeys.filter((key) => key in oldObj && oldObj[key] !== newObj[key]),\r\n  };\r\n}\r\n\r\nexport function hasOwnProperty(obj: object, prop: PropertyKey) {\r\n  return Object.prototype.hasOwnProperty.call(obj, prop);\r\n}\r\n","import { type VNode, isFragmentVNode, isTextVNode } from '@/vdom';\r\n\r\nexport const isPrototypeOf = Function.call.bind(Object.prototype.isPrototypeOf);\r\n\r\nexport function extractChildNodes(vnode: VNode): VNode[] {\r\n  if (!vnode.children || isTextVNode(vnode)) {\r\n    return [];\r\n  }\r\n\r\n  const extractedChildren: VNode[] = [];\r\n\r\n  for (const child of vnode.children) {\r\n    if (isFragmentVNode(child)) {\r\n      extractedChildren.push(...extractChildNodes(child));\r\n    } else {\r\n      extractedChildren.push(child);\r\n    }\r\n  }\r\n\r\n  return extractedChildren;\r\n}\r\n","export function isNonBlankString(value: string): boolean {\r\n  return value.trim() !== '';\r\n}\r\n\r\nexport function kebabize(str: string) {\r\n  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n}\r\n","import type { Entries } from '@/types';\r\nimport { isNonBlankString, kebabize } from './utils';\r\n\r\ntype HtmlAttributes = Partial<\r\n  {\r\n    class: string | string[];\r\n    style: Record<string, string>;\r\n  } & HtmlAttribute\r\n>;\r\n\r\nexport type GenericHtmlElement = Element & Record<string, any>;\r\n\r\nexport type HtmlAttribute<T extends GenericHtmlElement = GenericHtmlElement> = T;\r\n\r\nexport function applyAttributes(element: GenericHtmlElement, attributes: HtmlAttributes): void {\r\n  const { class: className, style, ...otherAttributes } = attributes;\r\n\r\n  if (className) {\r\n    applyClass(element, className);\r\n  }\r\n\r\n  if (style) {\r\n    Object.entries(style).forEach(([property, value]) => {\r\n      applyStyle(element, property, value);\r\n    });\r\n  }\r\n\r\n  for (const [attributeName, attributeValue] of Object.entries(\r\n    otherAttributes\r\n  ) as Entries<HtmlAttribute>) {\r\n    applyAttribute(element, attributeName, attributeValue);\r\n  }\r\n}\r\n\r\nexport function applyClass(element: GenericHtmlElement, className: string | string[]): void {\r\n  element.className = '';\r\n\r\n  if (typeof className === 'string') {\r\n    element.className = className;\r\n  } else if (Array.isArray(className)) {\r\n    element.classList.add(...className.filter(isNonBlankString));\r\n  }\r\n}\r\n\r\nexport function applyStyle(\r\n  element: GenericHtmlElement,\r\n  propertyName: string,\r\n  propertyValue: string\r\n): void {\r\n  element.style.setProperty(kebabize(propertyName), propertyValue);\r\n}\r\n\r\nexport function removeStyle(element: GenericHtmlElement, propertyName: string): void {\r\n  element.style.removeProperty(kebabize(propertyName));\r\n}\r\n\r\nexport function applyAttribute<TAttr extends keyof HtmlAttribute>(\r\n  element: GenericHtmlElement,\r\n  attributeName: TAttr,\r\n  attributeValue: any | null\r\n): void {\r\n  if (attributeValue == null) {\r\n    removeAttribute(element, attributeName);\r\n  } else if (attributeName.startsWith('data-')) {\r\n    element.setAttribute(attributeName, attributeValue);\r\n  } else {\r\n    element[attributeName] = attributeValue;\r\n  }\r\n}\r\n\r\nexport function removeAttribute<TAttr extends keyof HtmlAttribute>(\r\n  element: GenericHtmlElement,\r\n  attributeName: TAttr\r\n): void {\r\n  element[attributeName] = null;\r\n  element.removeAttribute(attributeName);\r\n}\r\n","import { applyAttributes } from '@/attributes';\r\nimport type { Component, ComponentInstance } from '@/component';\r\nimport { addEventListeners } from '@/events';\r\nimport {\r\n  type VNode,\r\n  isClassComponentVNode,\r\n  isElementVNode,\r\n  isFragmentVNode,\r\n  isTextVNode,\r\n} from '@/vdom';\r\n\r\n/**\r\n * Mounts a VNode onto the DOM.\r\n */\r\nexport function mountVNode(\r\n  vnode: VNode,\r\n  parentElement: Element,\r\n  index?: number,\r\n  hostComponent?: Component<unknown, unknown>\r\n): void {\r\n  if (isClassComponentVNode(vnode)) {\r\n    mountComponentVNode(vnode, parentElement, index);\r\n  } else if (isTextVNode(vnode)) {\r\n    mountTextVNode(vnode, parentElement, index);\r\n  } else if (isFragmentVNode(vnode)) {\r\n    mountFragmentVNode(vnode, parentElement, index, hostComponent);\r\n  } else if (isElementVNode(vnode)) {\r\n    mountElementVNode(vnode, parentElement, index, hostComponent);\r\n  } else {\r\n    throw new Error(`Cannot mount unknown VNode type: ${(vnode as any).type}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Mounts a text VNode to the DOM.\r\n */\r\nfunction mountTextVNode(vnode: VNode, parentElement: Element, index?: number): void {\r\n  const { props } = vnode;\r\n  const textNode = document.createTextNode(props.nodeValue);\r\n  vnode.el = textNode;\r\n\r\n  insertNode(textNode, parentElement, index);\r\n}\r\n\r\n/**\r\n * Mounts an element VNode to the DOM.\r\n */\r\nfunction mountElementVNode(\r\n  vnode: VNode,\r\n  parentElement: Element,\r\n  index?: number,\r\n  hostComponent?: Component<unknown, unknown>\r\n): void {\r\n  const { type, children } = vnode;\r\n  const element = document.createElement(type as string);\r\n  vnode.el = element;\r\n\r\n  applyVNodeProps(element, vnode, hostComponent);\r\n\r\n  children.forEach((child) => {\r\n    mountVNode(child, element, null, hostComponent);\r\n  });\r\n\r\n  insertNode(element, parentElement, index);\r\n}\r\n\r\n/**\r\n * Applies props and attributes to an element.\r\n */\r\nfunction applyVNodeProps(\r\n  element: Element,\r\n  vnode: VNode,\r\n  hostComponent?: Component<unknown, unknown>\r\n): void {\r\n  const { on: eventListeners = {}, ...props } = vnode.props;\r\n  const { key, ...attributes } = props;\r\n\r\n  vnode.listeners = addEventListeners(eventListeners, element, hostComponent);\r\n  applyAttributes(element, attributes);\r\n}\r\n\r\n/**\r\n * Mounts a fragment VNode to the DOM.\r\n */\r\nfunction mountFragmentVNode(\r\n  vnode: VNode,\r\n  parentElement: Element,\r\n  index?: number,\r\n  hostComponent?: Component<unknown, unknown>\r\n): void {\r\n  const { children } = vnode;\r\n  vnode.el = parentElement;\r\n\r\n  children.forEach((child, i) => {\r\n    mountVNode(child, parentElement, index ? index + i : null, hostComponent);\r\n  });\r\n}\r\n\r\n/**\r\n * Mounts a class component VNode to the DOM.\r\n */\r\nfunction mountComponentVNode(vnode: VNode, parentElement: Element, index?: number): void {\r\n  const ComponentClass = vnode.type as ComponentInstance;\r\n  const props = vnode.props;\r\n\r\n  // Initialize and mount the component.\r\n  const component = new ComponentClass(props, vnode.children);\r\n  component.mount(parentElement, index);\r\n\r\n  vnode.component = component;\r\n  vnode.el = component.firstElement;\r\n}\r\n\r\n/**\r\n * Inserts a node into the parent element at the specified index.\r\n */\r\nfunction insertNode(node: Node, parentElement: Element, index?: number): void {\r\n  if (index == null) {\r\n    parentElement.append(node);\r\n    return;\r\n  }\r\n  if (index < 0) {\r\n    throw new Error(`Index must be a non-negative integer, got ${index}`);\r\n  }\r\n  const children = parentElement.childNodes;\r\n  if (index >= children.length) {\r\n    parentElement.append(node);\r\n  } else {\r\n    parentElement.insertBefore(node, children[index]);\r\n  }\r\n}\r\n","import { applyAttribute, removeAttribute } from '@/attributes';\nimport { objectsDiff } from '@/utils';\n\nexport function patchAttrs(\n  el: Element,\n  oldAttrs: Record<string, any>,\n  newAttrs: Record<string, any>\n) {\n  const { added, removed, updated } = objectsDiff(oldAttrs, newAttrs);\n\n  removed.forEach((attr) => removeAttribute(el, attr));\n  [...added, ...updated].forEach((attr) => applyAttribute(el, attr, newAttrs[attr]));\n}\n","import { calculateArrayDifference, isNonBlankString } from '@/utils';\n\nexport function patchClasses(\n  el: Element,\n  oldClass: string | string[],\n  newClass: string | string[]\n) {\n  const oldClasses = toClassList(oldClass);\n  const newClasses = toClassList(newClass);\n\n  // Take all classes attached to the element\n  const currentClasses = [...new Set([...el.classList, ...oldClasses])];\n\n  const { added, removed } = calculateArrayDifference(currentClasses, newClasses);\n\n  el.classList.remove(...removed);\n  el.classList.add(...added);\n}\n\nfunction toClassList(classes: string | string[] = '') {\n  return Array.isArray(classes)\n    ? classes.filter(isNonBlankString)\n    : classes.split(/\\s+/).filter(isNonBlankString);\n}\n","import type { Component } from '@/component';\nimport { addEventListener } from '@/events';\nimport { objectsDiff } from '@/utils';\n\nexport function patchEvents(\n  el: Element,\n  oldListeners: Record<string, any> = {},\n  oldEvents: Record<string, any> = {},\n  newEvents: Record<string, any> = {},\n  hostComponent?: Component<unknown, unknown>\n) {\n  const { added, removed, updated } = objectsDiff(oldEvents, newEvents);\n\n  [...removed, ...updated].forEach((eventName) =>\n    el.removeEventListener(eventName, oldListeners[eventName])\n  );\n\n  const newListeners: Record<string, any> = {};\n  [...added, ...updated].forEach((eventName) => {\n    newListeners[eventName] = addEventListener(eventName, newEvents[eventName], el, hostComponent);\n  });\n\n  return newListeners;\n}\n","import { applyStyle, removeStyle } from '@/attributes';\nimport { objectsDiff } from '@/utils';\n\nexport function patchStyles(\n  el: Element,\n  oldStyle: Record<string, string>,\n  newStyle: Record<string, string>\n) {\n  const { added, removed, updated } = objectsDiff(oldStyle, newStyle);\n\n  removed.forEach((style) => removeStyle(el, style));\n  [...added, ...updated].forEach((style) => applyStyle(el, style, newStyle[style]));\n}\n","import type { Component } from '@/component';\r\nimport { destroyVNode } from '@/destroy-dom';\r\nimport { mountVNode } from '@/mount-dom';\r\nimport {\r\n  ArrayDiffOperationType,\r\n  areVNodeNodesEqual,\r\n  extractChildNodes,\r\n  generateArrayTransformationSequence,\r\n} from '@/utils';\r\nimport { type VNode, isClassComponentVNode, isElementVNode, isTextVNode } from '@/vdom';\r\nimport { patchAttrs } from './patch-attrs';\r\nimport { patchClasses } from './patch-classes';\r\nimport { patchEvents } from './patch-events';\r\nimport { patchStyles } from './patch-styles';\r\n\r\nexport function patchDOM(\r\n  oldVdom: VNode,\r\n  newVdom: VNode,\r\n  parentEl: Element,\r\n  hostComponent?: Component<unknown, unknown>\r\n) {\r\n  if (!areVNodeNodesEqual(oldVdom, newVdom)) {\r\n    const index = Array.from(parentEl.childNodes).indexOf(oldVdom.el);\r\n    destroyVNode(oldVdom);\r\n    mountVNode(newVdom, parentEl, index, hostComponent);\r\n    return newVdom;\r\n  }\r\n\r\n  newVdom.el = oldVdom.el;\r\n\r\n  if (isTextVNode(newVdom)) {\r\n    patchText(oldVdom, newVdom);\r\n    return newVdom;\r\n  }\r\n  if (isClassComponentVNode(newVdom)) {\r\n    patchComponent(oldVdom, newVdom);\r\n    // TODO: patchChildren for class components\r\n    return newVdom;\r\n  }\r\n\r\n  if (isElementVNode(newVdom)) {\r\n    patchElement(oldVdom, newVdom, hostComponent);\r\n  }\r\n\r\n  patchChildren(oldVdom, newVdom, hostComponent);\r\n  return newVdom;\r\n}\r\n\r\nfunction patchText(oldVdom: VNode, newVdom: VNode) {\r\n  const { el } = oldVdom;\r\n  const { nodeValue: oldTNodeValue } = oldVdom.props;\r\n  const { nodeValue: newNodeValue } = newVdom.props;\r\n\r\n  if (oldTNodeValue !== newNodeValue) {\r\n    el.nodeValue = newNodeValue;\r\n  }\r\n}\r\n\r\nfunction patchElement(oldVdom: VNode, newVdom: VNode, hostComponent?: Component<unknown, unknown>) {\r\n  const el = oldVdom.el as Element;\r\n  const { class: oldClass, style: oldStyle, on: oldEvents, ...oldAttrs } = oldVdom.props;\r\n  const { class: newClass, style: newStyle, on: newEvents, ...newAttrs } = newVdom.props;\r\n\r\n  patchAttrs(el, oldAttrs, newAttrs);\r\n  patchClasses(el, oldClass, newClass);\r\n  patchStyles(el, oldStyle, newStyle);\r\n  newVdom.listeners = patchEvents(el, oldVdom.listeners, oldEvents, newEvents, hostComponent);\r\n}\r\n\r\nfunction patchComponent(oldVdom: VNode, newVdom: VNode) {\r\n  const { component } = oldVdom;\r\n  const { key, ...props } = newVdom.props;\r\n\r\n  component.updateProps(props);\r\n  newVdom.component = component;\r\n  newVdom.el = component.firstElement;\r\n}\r\n\r\nfunction patchChildren(\r\n  oldVdom: VNode,\r\n  newVdom: VNode,\r\n  hostComponent?: Component<unknown, unknown>\r\n) {\r\n  const oldChildren = extractChildNodes(oldVdom);\r\n  const newChildren = extractChildNodes(newVdom);\r\n  const parentEl = oldVdom.el as Element;\r\n  const diffSeq = generateArrayTransformationSequence(oldChildren, newChildren, areVNodeNodesEqual);\r\n  diffSeq.forEach(({ op, index, originalIndex, item }) => {\r\n    const offset = hostComponent?.offset ?? 0;\r\n\r\n    switch (op) {\r\n      case ArrayDiffOperationType.ADD:\r\n        mountVNode(item, parentEl, index + offset, hostComponent);\r\n        break;\r\n\r\n      case ArrayDiffOperationType.REMOVE:\r\n        destroyVNode(item);\r\n        break;\r\n\r\n      case ArrayDiffOperationType.MOVE: {\r\n        const elAtTargetIndex = parentEl.childNodes[index + offset];\r\n        parentEl.insertBefore(oldChildren[originalIndex].el, elAtTargetIndex);\r\n        patchDOM(oldChildren[originalIndex], newChildren[index], parentEl, hostComponent);\r\n        break;\r\n      }\r\n\r\n      case ArrayDiffOperationType.NOOP:\r\n        patchDOM(oldChildren[originalIndex], newChildren[index], parentEl, hostComponent);\r\n        break;\r\n    }\r\n  });\r\n}\r\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","import { destroyVNode } from '@/destroy-dom';\r\nimport { mountVNode } from '@/mount-dom';\r\nimport { patchDOM } from '@/patch-dom';\r\nimport { extractChildNodes } from '@/utils';\r\nimport { type VNode, isClassComponent, isElementVNode, isFragmentVNode } from '@/vdom';\r\nimport equals from 'fast-deep-equal';\r\n\r\nexport abstract class Component<TProps, TState> {\r\n  #isMounted = false;\r\n  #vdom: VNode = null;\r\n  #hostEl: Element = null;\r\n\r\n  state: Readonly<TState>;\r\n  props: Readonly<TProps>;\r\n  children: VNode[];\r\n\r\n  #refs: Record<string, Element> = {};\r\n\r\n  constructor(props?: TProps, children?: VNode[]) {\r\n    this.props = props ?? ({} as TProps);\r\n    this.children = children ?? [];\r\n  }\r\n\r\n  get $refs() {\r\n    return this.#refs;\r\n  }\r\n\r\n  get elements(): Element[] {\r\n    if (!this.#vdom) return [];\r\n    return isFragmentVNode(this.#vdom)\r\n      ? this.#extractFragmentElements()\r\n      : [this.#vdom.el as Element];\r\n  }\r\n\r\n  get firstElement(): Element | null {\r\n    return this.elements[0] ?? null;\r\n  }\r\n\r\n  get offset(): number {\r\n    return isFragmentVNode(this.#vdom)\r\n      ? Array.from(this.#hostEl.childNodes).indexOf(this.firstElement)\r\n      : 0;\r\n  }\r\n\r\n  abstract render(): VNode;\r\n  abstract onMounted(): void;\r\n  abstract onUnmounted(): void;\r\n  abstract onUpdated(): void;\r\n\r\n  updateProps(props: Partial<TProps>) {\r\n    const newProps = { ...this.props, ...props };\r\n    if (equals(this.props, newProps)) return;\r\n    this.props = newProps;\r\n    this.#patch();\r\n  }\r\n\r\n  updateState(state: Partial<TState> | ((prevState: TState) => TState)) {\r\n    const newState = typeof state === 'function' ? state(this.state) : { ...this.state, ...state };\r\n    if (equals(this.state, newState)) return; // Skip if state hasn't changed\r\n    this.state = newState;\r\n    this.#patch();\r\n  }\r\n\r\n  mount(hostEl: Element, index: number = null) {\r\n    if (this.#isMounted) {\r\n      throw new Error('Component is already mounted');\r\n    }\r\n    this.#vdom = this.render();\r\n    mountVNode(this.#vdom, hostEl, index, this);\r\n\r\n    this.#setRefs();\r\n    this.#hostEl = hostEl;\r\n    this.#isMounted = true;\r\n    this.onMounted();\r\n  }\r\n\r\n  unmount() {\r\n    if (!this.#isMounted) {\r\n      throw new Error('Component is not mounted');\r\n    }\r\n    this.#refs = {};\r\n    destroyVNode(this.#vdom);\r\n    this.#vdom = null;\r\n    this.#hostEl = null;\r\n    this.#isMounted = false;\r\n    this.onUnmounted();\r\n  }\r\n\r\n  #patch() {\r\n    if (!this.#isMounted) {\r\n      throw new Error('Component is not mounted');\r\n    }\r\n    const vdom = this.render();\r\n    this.#vdom = patchDOM(this.#vdom, vdom, this.#hostEl, this);\r\n    this.onUpdated();\r\n  }\r\n\r\n  #setRefs() {\r\n    this.#setRefForVNode(this.#vdom);\r\n    this.children.forEach((child) => {\r\n      if (child.ref) {\r\n        this.#setRefForVNode(child);\r\n      }\r\n    });\r\n  }\r\n\r\n  #setRefForVNode(vnode: VNode) {\r\n    if (isElementVNode(vnode) && vnode.ref) {\r\n      this.#setRef(vnode.ref, vnode.el as Element);\r\n    }\r\n  }\r\n\r\n  #setRef(ref: string, el: Element) {\r\n    if (this.#refs[ref]) {\r\n      console.warn(`Ref \"${ref}\" already exists`);\r\n      return;\r\n    }\r\n    this.#refs[ref] = el;\r\n  }\r\n\r\n  #extractFragmentElements(): Element[] {\r\n    return extractChildNodes(this.#vdom).flatMap((child) => {\r\n      if (isClassComponent(child.type)) {\r\n        return child.component.elements;\r\n      }\r\n      return child.el as Element;\r\n    });\r\n  }\r\n}\r\n","import { hasOwnProperty, noOp } from '@/utils';\r\nimport type { VNode } from '@/vdom';\r\nimport { Component } from './component';\r\nimport type { ComponentInstance, DefineComponentArgs } from './types';\r\n\r\nexport function defineComponent<TProps, TState, TMethods>({\r\n  render,\r\n  state,\r\n  methods,\r\n  onMounted = noOp,\r\n  onUnmounted = noOp,\r\n  onUpdated = noOp,\r\n}: DefineComponentArgs<TProps, TState, TMethods> &\r\n  ThisType<Component<TProps, TState> & TMethods>): ComponentInstance<TProps, TState, TMethods> {\r\n  class BaseComponent extends Component<TProps, TState> {\r\n    constructor(props?: TProps, children?: VNode[]) {\r\n      super(props, children);\r\n      this.state = state ? state(props) : ({} as TState);\r\n    }\r\n\r\n    render(): any {\r\n      return render.call(this, this.props, { children: this.children });\r\n    }\r\n\r\n    onMounted() {\r\n      return Promise.resolve(onMounted.call(this));\r\n    }\r\n    onUnmounted() {\r\n      return Promise.resolve(onUnmounted.call(this));\r\n    }\r\n    onUpdated() {\r\n      return Promise.resolve(onUpdated.call(this));\r\n    }\r\n  }\r\n\r\n  for (const methodName in methods) {\r\n    if (hasOwnProperty(BaseComponent, methodName) || methodName in BaseComponent.prototype) {\r\n      throw new Error(`Method \"${methodName}()\" already exists in the component. Can't override`);\r\n    }\r\n    (BaseComponent.prototype as any)[methodName] = methods[methodName];\r\n  }\r\n\r\n  return BaseComponent as any;\r\n}\r\n","import { filterNonNullable } from '@/utils';\r\nimport { type VNode, type VNodeChildren, createTextVNode, isVNode } from '../vnode';\r\n\r\nexport function toVNode(children: VNodeChildren[]): VNode[] {\r\n  return children.map((child) => (isVNode(child) ? child : createTextVNode(String(child))));\r\n}\r\n\r\nexport function normalizeChildren(children: VNodeChildren | VNodeChildren[]): VNode[] {\r\n  if (!Array.isArray(children)) {\r\n    children = [children];\r\n  }\r\n  return toVNode(filterNonNullable(children));\r\n}\r\n","import { Component, type ComponentInstance } from '@/component';\r\nimport type { FunctionComponent } from '@/components/types';\r\nimport type { WritableAttributes } from '@/types';\r\nimport { isPrototypeOf } from '@/utils';\r\nimport { normalizeChildren } from './helpers';\r\nimport type { Attributes, ElementVNodeListeners, Events } from './types';\r\n\r\nexport const TextVNode: unique symbol = Symbol.for('text');\r\nexport const FragmentVNode: unique symbol = Symbol.for('fragment');\r\n\r\nexport type VNodeTypes = string | ComponentInstance | typeof TextVNode | typeof FragmentVNode;\r\n\r\nexport interface VNode {\r\n  _isVNode: true;\r\n  type: VNodeTypes;\r\n  props: VNodeProps<any>;\r\n  children: VNode[];\r\n  el: Element | Text | null;\r\n  ref: string | null;\r\n  listeners: ElementVNodeListeners | null;\r\n  component: Component<any, any> | null;\r\n}\r\n\r\nexport type VNodeChildren = VNode | string | number | boolean | null | undefined | void;\r\n\r\nexport type VNodeProps<T> = {\r\n  class?: string | string[];\r\n  style?: WritableAttributes<CSSStyleDeclaration>;\r\n  on?: Events;\r\n} & Attributes &\r\n  T;\r\n\r\nexport function createVNode(\r\n  type: VNodeTypes,\r\n  props?: VNodeProps<any> | null,\r\n  children?: VNodeChildren[]\r\n): VNode {\r\n  const { ref: rawRef, ...others } = props ?? {};\r\n\r\n  const normalizedChildren = normalizeChildren(children || []);\r\n  const ref = typeof rawRef === 'string' ? rawRef : null;\r\n  return {\r\n    _isVNode: true,\r\n    type,\r\n    props: others,\r\n    children: normalizedChildren,\r\n    ref,\r\n    el: null,\r\n    listeners: null,\r\n    component: null,\r\n  } satisfies VNode;\r\n}\r\n\r\nexport function createTextVNode(value: string) {\r\n  return createVNode(TextVNode, { nodeValue: value });\r\n}\r\nexport function createFragmentVNode(children: VNodeChildren[]): VNode {\r\n  return createVNode(FragmentVNode, null, children);\r\n}\r\n\r\nexport function isVNode(value?: any): value is VNode {\r\n  return value ? value?._isVNode === true : false;\r\n}\r\n\r\nexport function isTextVNode(value?: unknown): boolean {\r\n  return isVNode(value) && value.type === TextVNode;\r\n}\r\n\r\nexport function isFragmentVNode(value?: unknown): boolean {\r\n  return isVNode(value) && value.type === FragmentVNode;\r\n}\r\n\r\nexport function isElementVNode(value?: unknown): boolean {\r\n  return isVNode(value) && typeof value.type === 'string';\r\n}\r\n\r\nexport function isClassComponentVNode(value?: unknown): boolean {\r\n  return isVNode(value) && isClassComponent(value.type);\r\n}\r\n\r\nexport function isClassComponent(type: unknown): type is ComponentInstance<any, any, any> {\r\n  return isFunctionComponent(type) && isPrototypeOf(Component, type);\r\n}\r\n\r\nexport function isFunctionComponent(type: unknown): type is FunctionComponent<any> {\r\n  return typeof type === 'function';\r\n}\r\n","import { removeEventListeners } from '@/events';\r\nimport { type VNode, isClassComponentVNode } from '@/vdom';\r\n\r\n/**\r\n * Recursively destroys a VNode and its children, unmounting components and cleaning up DOM elements.\r\n */\r\nexport function destroyVNode(vnode: VNode): void {\r\n  if (isClassComponentVNode(vnode)) {\r\n    destroyComponentVNode(vnode);\r\n  } else {\r\n    destroyElementVNode(vnode);\r\n  }\r\n}\r\n\r\n/**\r\n * Destroys a class component VNode by unmounting its component.\r\n */\r\nfunction destroyComponentVNode(vnode: VNode): void {\r\n  vnode.component?.unmount();\r\n}\r\n\r\n/**\r\n * Destroys a non-component VNode by removing its DOM element, event listeners, and recursively cleaning children.\r\n */\r\nfunction destroyElementVNode(vnode: VNode): void {\r\n  const { el, children, listeners } = vnode;\r\n\r\n  if (listeners) {\r\n    if (el instanceof Element) {\r\n      removeEventListeners(listeners, el);\r\n    }\r\n    vnode.listeners = null;\r\n  }\r\n\r\n  children.forEach(destroyVNode);\r\n  el?.remove();\r\n}\r\n","import type { ComponentInstance, InferProps } from '@/component';\r\nimport type { FunctionComponent } from '@/components';\r\nimport type { WritableAttributes } from '@/types';\r\nimport {\r\n  type Attributes,\r\n  type ElementTag,\r\n  type VNode,\r\n  type VNodeChildren,\r\n  type VNodeProps,\r\n  createFragmentVNode,\r\n  createVNode,\r\n  isClassComponent,\r\n  isFunctionComponent,\r\n} from '@/vdom';\r\n\r\ntype ElementProps<T extends ElementTag> = WritableAttributes<HTMLElementTagNameMap[T]>;\r\ntype InferComponentProps<T> = T extends ComponentInstance\r\n  ? InferProps<T>\r\n  : T extends FunctionComponent<any>\r\n    ? Parameters<T>[0]\r\n    : never;\r\n\r\nexport function h<T>(\r\n  type: T,\r\n  props?: (Attributes & InferComponentProps<T>) | null,\r\n  children?: VNodeChildren[] | null\r\n): VNode;\r\nexport function h<T extends ElementTag>(\r\n  type: T,\r\n  props?: VNodeProps<ElementProps<T>> | null,\r\n  children?: VNodeChildren[] | null\r\n): VNode;\r\nexport function h(type: any, props?: any, children?: VNodeChildren[] | null) {\r\n  if (typeof type === 'string') {\r\n    return createVNode(type, props, children);\r\n  }\r\n  if (isClassComponent(type)) {\r\n    return createVNode(type, props, children);\r\n  }\r\n  if (isFunctionComponent(type)) {\r\n    return type(props, { children }) as any;\r\n  }\r\n\r\n  throw new Error(\r\n    `Invalid component type passed to \"h\": expected a string, class component, or function component but received ${typeof type} (${type}).`\r\n  );\r\n}\r\n\r\nexport function hFragment(vNodes: VNodeChildren[]): VNode {\r\n  return createFragmentVNode(vNodes);\r\n}\r\n","import type { ComponentInstance } from '@/component';\r\nimport { destroyVNode } from '@/destroy-dom';\r\nimport { h } from '@/h';\r\nimport { mountVNode } from '@/mount-dom';\r\nimport type { VNode } from '@/vdom';\r\n\r\nexport function createApp<TProps>(RootComponent: ComponentInstance<TProps>, props: TProps = null) {\r\n  let parentEl: Element = null;\r\n  let isMounted: boolean = false;\r\n  let vdom: VNode = null;\r\n\r\n  function reset() {\r\n    parentEl = null;\r\n    isMounted = false;\r\n    vdom = null;\r\n  }\r\n\r\n  return {\r\n    mount(_parentEl: Element | null) {\r\n      if (!_parentEl) {\r\n        console.warn('createApp.mount(): Element does not exists.');\r\n        return;\r\n      }\r\n      if (isMounted) {\r\n        throw new Error('The application is already mounted');\r\n      }\r\n\r\n      parentEl = _parentEl;\r\n      vdom = h(RootComponent, props);\r\n      mountVNode(vdom, parentEl);\r\n\r\n      isMounted = true;\r\n    },\r\n\r\n    unmount() {\r\n      if (!isMounted) {\r\n        throw new Error('The application is not mounted');\r\n      }\r\n      destroyVNode(vdom);\r\n      reset();\r\n    },\r\n  };\r\n}\r\n","import type { ComponentContext } from '@/component';\r\nimport { hFragment } from '@/h';\r\nimport type { Attributes } from '@/vdom';\r\n\r\nexport function Fragment(_props: Attributes, { children }: ComponentContext) {\r\n  return hFragment(children);\r\n}\r\n"],"names":["addEventListener","eventName","handler","element","hostComponent","wrappedHandler","args","addEventListeners","eventListeners","activeListeners","listener","removeEventListeners","filterNonNullable","arr","value","calculateArrayDifference","originalArray","updatedArray","ArrayDiffOperationType","IndexedArrayTracker","#trackedArray","#originalItemIndices","#compareFn","array","compareFn","_","i","currentIndex","trackedArray","updatedItem","item","originalIndex","currentItem","index","fromIndex","movedItem","operations","length","generateArrayTransformationSequence","a","b","transformationSteps","tracker","noOp","areVNodeNodesEqual","nodeA","nodeB","typeA","keyA","typeB","keyB","objectsDiff","oldObj","newObj","oldKeys","newKeys","key","hasOwnProperty","obj","prop","isPrototypeOf","extractChildNodes","vnode","isTextVNode","extractedChildren","child","isFragmentVNode","isNonBlankString","kebabize","str","applyAttributes","attributes","className","style","otherAttributes","applyClass","property","applyStyle","attributeName","attributeValue","applyAttribute","propertyName","propertyValue","removeStyle","removeAttribute","mountVNode","parentElement","isClassComponentVNode","mountComponentVNode","mountTextVNode","mountFragmentVNode","isElementVNode","mountElementVNode","props","textNode","insertNode","type","children","applyVNodeProps","ComponentClass","component","node","patchAttrs","el","oldAttrs","newAttrs","added","removed","updated","attr","patchClasses","oldClass","newClass","oldClasses","toClassList","newClasses","currentClasses","classes","patchEvents","oldListeners","oldEvents","newEvents","newListeners","patchStyles","oldStyle","newStyle","patchDOM","oldVdom","newVdom","parentEl","destroyVNode","patchText","patchComponent","patchElement","patchChildren","oldTNodeValue","newNodeValue","oldChildren","newChildren","op","offset","elAtTargetIndex","fastDeepEqual","equal","keys","Component","#isMounted","#vdom","#hostEl","#refs","#extractFragmentElements","newProps","equals","#patch","state","newState","hostEl","#setRefs","vdom","#setRefForVNode","#setRef","ref","isClassComponent","defineComponent","render","methods","onMounted","onUnmounted","onUpdated","BaseComponent","methodName","toVNode","isVNode","createTextVNode","normalizeChildren","TextVNode","FragmentVNode","createVNode","rawRef","others","normalizedChildren","createFragmentVNode","isFunctionComponent","destroyComponentVNode","destroyElementVNode","listeners","h","hFragment","vNodes","createApp","RootComponent","isMounted","reset","_parentEl","Fragment","_props"],"mappings":"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","x_google_ignoreList":[14]}