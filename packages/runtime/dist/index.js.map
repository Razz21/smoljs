{"version":3,"file":"index.js","sources":["../src/events.ts","../src/utils/arrays.ts","../src/utils/functions.ts","../src/utils/nodes-equal.ts","../src/utils/objects.ts","../src/utils/shared.ts","../src/utils/strings.ts","../src/attributes.ts","../src/mount-dom.ts","../src/patch-dom/patch-attrs.ts","../src/patch-dom/patch-classes.ts","../src/patch-dom/patch-events.ts","../src/patch-dom/patch-styles.ts","../src/patch-dom/patch-dom.ts","../../../node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js","../src/component/component.ts","../src/component/defineComponent.ts","../src/vdom/helpers/index.ts","../src/vdom/vnode.ts","../src/destroy-dom.ts","../src/h.ts","../src/app.ts","../src/components/fragment.ts"],"sourcesContent":["import type { Component } from '@/component';\r\nimport type { AnyFunction } from '@/types';\r\nimport type { ElementVNodeListeners } from '@/vdom';\r\n\r\nexport function addEventListener(\r\n  eventName: string,\r\n  handler: AnyFunction,\r\n  element: Element,\r\n  hostComponent: Component<unknown, unknown> = null\r\n) {\r\n  const wrappedHandler: EventListener = (...args) => {\r\n    hostComponent ? handler.apply(hostComponent, args) : handler(...args);\r\n  };\r\n  element.addEventListener(eventName, wrappedHandler);\r\n  return wrappedHandler;\r\n}\r\n\r\nexport function addEventListeners(\r\n  eventListeners: ElementVNodeListeners = {},\r\n  element: Element,\r\n  hostComponent: Component<unknown, unknown> = null\r\n) {\r\n  const activeListeners: ElementVNodeListeners = {};\r\n\r\n  Object.entries(eventListeners).forEach(([eventName, handler]) => {\r\n    const listener = addEventListener(eventName, handler, element, hostComponent);\r\n    activeListeners[eventName] = listener;\r\n  });\r\n\r\n  return activeListeners;\r\n}\r\n\r\nexport function removeEventListeners(eventListeners: ElementVNodeListeners, element: Element) {\r\n  Object.entries(eventListeners).forEach(([eventName, handler]) => {\r\n    element.removeEventListener(eventName, handler);\r\n  });\r\n}\r\n","import type { Nullable } from '@/types';\r\n\r\nexport function filterNonNullable<T>(arr: ReadonlyArray<Nullable<T>>): T[] {\r\n  return arr.filter((value): value is T => value != null);\r\n}\r\n\r\nexport function calculateArrayDifference<T>(\r\n  originalArray: ReadonlyArray<T>,\r\n  updatedArray: ReadonlyArray<T>\r\n): { added: T[]; removed: T[] } {\r\n  return {\r\n    added: updatedArray.filter((element) => !originalArray.includes(element)),\r\n    removed: originalArray.filter((element) => !updatedArray.includes(element)),\r\n  };\r\n}\r\n\r\nexport const ArrayDiffOperationType = {\r\n  ADD: 'add',\r\n  REMOVE: 'remove',\r\n  MOVE: 'move',\r\n  NOOP: 'noop',\r\n} as const;\r\n\r\ntype ArrayOperation<T> = {\r\n  op: (typeof ArrayDiffOperationType)[keyof typeof ArrayDiffOperationType];\r\n  index: number;\r\n  from?: number;\r\n  item: T;\r\n  originalIndex?: number;\r\n};\r\n\r\nexport class IndexedArrayTracker<T> {\r\n  #trackedArray: T[];\r\n  #originalItemIndices: number[];\r\n  #compareFn: (a: T, b: T) => boolean;\r\n\r\n  constructor(array: ReadonlyArray<T>, compareFn: (a: T, b: T) => boolean) {\r\n    this.#trackedArray = [...array];\r\n    this.#originalItemIndices = array.map((_, i) => i);\r\n    this.#compareFn = compareFn;\r\n  }\r\n\r\n  get length() {\r\n    return this.#trackedArray.length;\r\n  }\r\n\r\n  isRemovedFromArray(currentIndex: number, updatedArray: ReadonlyArray<T>): boolean {\r\n    if (currentIndex >= this.length) return false;\r\n    const compareFn = this.#compareFn;\r\n    const trackedArray = this.#trackedArray;\r\n    return !updatedArray.some((updatedItem) => compareFn(trackedArray[currentIndex], updatedItem));\r\n  }\r\n\r\n  isUnchangedItem(currentIndex: number, updatedArray: ReadonlyArray<T>): boolean {\r\n    if (currentIndex >= this.length) return false;\r\n    return this.#compareFn(this.#trackedArray[currentIndex], updatedArray[currentIndex]);\r\n  }\r\n\r\n  removeItem(currentIndex: number): ArrayOperation<T> {\r\n    const [item] = this.#trackedArray.splice(currentIndex, 1);\r\n    const [originalIndex] = this.#originalItemIndices.splice(currentIndex, 1);\r\n    return {\r\n      op: ArrayDiffOperationType.REMOVE,\r\n      index: currentIndex,\r\n      item,\r\n      originalIndex,\r\n    };\r\n  }\r\n\r\n  addItem(currentItem: T, currentIndex: number): ArrayOperation<T> {\r\n    this.#trackedArray.splice(currentIndex, 0, currentItem);\r\n    this.#originalItemIndices.splice(currentIndex, 0, -1);\r\n    return {\r\n      op: ArrayDiffOperationType.ADD,\r\n      index: currentIndex,\r\n      item: currentItem,\r\n    };\r\n  }\r\n\r\n  moveItem(currentItem: T, index: number): ArrayOperation<T> {\r\n    const fromIndex = this.#trackedArray.findIndex((item) => this.#compareFn(item, currentItem));\r\n    if (fromIndex === -1) throw new Error('Item not found');\r\n    const [movedItem] = this.#trackedArray.splice(fromIndex, 1);\r\n    const [originalIndex] = this.#originalItemIndices.splice(fromIndex, 1);\r\n\r\n    this.#trackedArray.splice(index, 0, movedItem);\r\n    this.#originalItemIndices.splice(index, 0, originalIndex);\r\n\r\n    return {\r\n      op: ArrayDiffOperationType.MOVE,\r\n      from: fromIndex,\r\n      index,\r\n      item: movedItem,\r\n      originalIndex,\r\n    };\r\n  }\r\n\r\n  removeRemainingItems(fromIndex: number): ArrayOperation<T>[] {\r\n    const operations = [];\r\n    while (this.length > fromIndex) {\r\n      operations.push(this.removeItem(fromIndex));\r\n    }\r\n    return operations;\r\n  }\r\n\r\n  findItemIndex(item: T, fromIndex: number): number {\r\n    const length = this.length;\r\n    const compareFn = this.#compareFn;\r\n    const trackedArray = this.#trackedArray;\r\n\r\n    if (fromIndex < 0 || fromIndex >= length) {\r\n      return -1;\r\n    }\r\n    for (let i = fromIndex; i < length; i++) {\r\n      if (compareFn(item, trackedArray[i])) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  noopItem(index: number): ArrayOperation<T> {\r\n    return {\r\n      op: ArrayDiffOperationType.NOOP,\r\n      index,\r\n      item: this.#trackedArray[index],\r\n      originalIndex: this.#originalItemIndices[index],\r\n    };\r\n  }\r\n}\r\n\r\nexport function generateArrayTransformationSequence<T>(\r\n  originalArray: ReadonlyArray<T>,\r\n  updatedArray: ReadonlyArray<T>,\r\n  compareFn: (a: T, b: T) => boolean = (a, b) => a === b\r\n) {\r\n  const transformationSteps: ArrayOperation<T>[] = [];\r\n  const tracker = new IndexedArrayTracker(originalArray, compareFn);\r\n\r\n  for (let currentIndex = 0; currentIndex < updatedArray.length; currentIndex++) {\r\n    const currentItem = updatedArray[currentIndex];\r\n\r\n    if (tracker.isRemovedFromArray(currentIndex, updatedArray)) {\r\n      transformationSteps.push(tracker.removeItem(currentIndex));\r\n      currentIndex--;\r\n      continue;\r\n    }\r\n\r\n    if (tracker.isUnchangedItem(currentIndex, updatedArray)) {\r\n      transformationSteps.push(tracker.noopItem(currentIndex));\r\n      continue;\r\n    }\r\n\r\n    if (tracker.findItemIndex(currentItem, currentIndex) === -1) {\r\n      transformationSteps.push(tracker.addItem(currentItem, currentIndex));\r\n      continue;\r\n    }\r\n\r\n    transformationSteps.push(tracker.moveItem(currentItem, currentIndex));\r\n  }\r\n\r\n  transformationSteps.push(...tracker.removeRemainingItems(updatedArray.length));\r\n  return transformationSteps;\r\n}\r\n","export function noOp() {}\r\n","import type { VNode } from '@/vdom';\r\n\r\nexport function areVNodeNodesEqual(nodeA: VNode, nodeB: VNode): boolean {\r\n  if (nodeA.type !== nodeB.type) {\r\n    return false;\r\n  }\r\n\r\n  const {\r\n    type: typeA,\r\n    props: { key: keyA },\r\n  } = nodeA;\r\n  const {\r\n    type: typeB,\r\n    props: { key: keyB },\r\n  } = nodeB as typeof nodeA;\r\n\r\n  // TODO: test performance of this approach\r\n  return typeA === typeB && keyA === keyB;\r\n}\r\n","export function objectsDiff<T extends Record<string, any>, U extends Record<string, any>>(\r\n  oldObj: T = {} as T,\r\n  newObj: U = {} as U\r\n) {\r\n  const oldKeys = Object.keys(oldObj);\r\n  const newKeys = Object.keys(newObj);\r\n\r\n  return {\r\n    added: newKeys.filter((key) => !(key in oldObj)),\r\n    removed: oldKeys.filter((key) => !(key in newObj)),\r\n    updated: newKeys.filter((key) => key in oldObj && oldObj[key] !== newObj[key]),\r\n  };\r\n}\r\n\r\nexport function hasOwnProperty(obj: object, prop: PropertyKey) {\r\n  return Object.prototype.hasOwnProperty.call(obj, prop);\r\n}\r\n","import { type VNode, isFragmentVNode, isTextVNode } from '@/vdom';\r\n\r\nexport const isPrototypeOf = Function.call.bind(Object.prototype.isPrototypeOf);\r\n\r\nexport function extractChildNodes(vnode: VNode): VNode[] {\r\n  if (!vnode.children || isTextVNode(vnode)) {\r\n    return [];\r\n  }\r\n\r\n  const extractedChildren: VNode[] = [];\r\n\r\n  for (const child of vnode.children) {\r\n    if (isFragmentVNode(child)) {\r\n      extractedChildren.push(...extractChildNodes(child));\r\n    } else {\r\n      extractedChildren.push(child);\r\n    }\r\n  }\r\n\r\n  return extractedChildren;\r\n}\r\n","export function isNonBlankString(value: string): boolean {\r\n  return value.trim() !== '';\r\n}\r\n\r\nexport function kebabize(str: string) {\r\n  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n}\r\n","import type { Entries } from '@/types';\r\nimport { isNonBlankString, kebabize } from './utils';\r\n\r\ntype HtmlAttributes = Partial<\r\n  {\r\n    class: string | string[];\r\n    style: Record<string, string>;\r\n  } & HtmlAttribute\r\n>;\r\n\r\nexport type GenericHtmlElement = Element & Record<string, any>;\r\n\r\nexport type HtmlAttribute<T extends GenericHtmlElement = GenericHtmlElement> = T;\r\n\r\nexport function applyAttributes(element: GenericHtmlElement, attributes: HtmlAttributes): void {\r\n  const { class: className, style, ...otherAttributes } = attributes;\r\n\r\n  if (className) {\r\n    applyClass(element, className);\r\n  }\r\n\r\n  if (style) {\r\n    Object.entries(style).forEach(([property, value]) => {\r\n      applyStyle(element, property, value);\r\n    });\r\n  }\r\n\r\n  for (const [attributeName, attributeValue] of Object.entries(\r\n    otherAttributes\r\n  ) as Entries<HtmlAttribute>) {\r\n    applyAttribute(element, attributeName, attributeValue);\r\n  }\r\n}\r\n\r\nexport function applyClass(element: GenericHtmlElement, className: string | string[]): void {\r\n  element.className = '';\r\n\r\n  if (typeof className === 'string') {\r\n    element.className = className;\r\n  } else if (Array.isArray(className)) {\r\n    element.classList.add(...className.filter(isNonBlankString));\r\n  }\r\n}\r\n\r\nexport function applyStyle(\r\n  element: GenericHtmlElement,\r\n  propertyName: string,\r\n  propertyValue: string\r\n): void {\r\n  element.style.setProperty(kebabize(propertyName), propertyValue);\r\n}\r\n\r\nexport function removeStyle(element: GenericHtmlElement, propertyName: string): void {\r\n  element.style.removeProperty(kebabize(propertyName));\r\n}\r\n\r\nexport function applyAttribute<TAttr extends keyof HtmlAttribute>(\r\n  element: GenericHtmlElement,\r\n  attributeName: TAttr,\r\n  attributeValue: any | null\r\n): void {\r\n  if (attributeValue == null) {\r\n    removeAttribute(element, attributeName);\r\n  } else if (attributeName.startsWith('data-')) {\r\n    element.setAttribute(attributeName, attributeValue);\r\n  } else {\r\n    element[attributeName] = attributeValue;\r\n  }\r\n}\r\n\r\nexport function removeAttribute<TAttr extends keyof HtmlAttribute>(\r\n  element: GenericHtmlElement,\r\n  attributeName: TAttr\r\n): void {\r\n  element[attributeName] = null;\r\n  element.removeAttribute(attributeName);\r\n}\r\n","import { applyAttributes } from '@/attributes';\r\nimport type { Component, ComponentInstance } from '@/component';\r\nimport { addEventListeners } from '@/events';\r\nimport {\r\n  type VNode,\r\n  isClassComponentVNode,\r\n  isElementVNode,\r\n  isFragmentVNode,\r\n  isTextVNode,\r\n} from '@/vdom';\r\n\r\n/**\r\n * Mounts a VNode onto the DOM.\r\n */\r\nexport function mountVNode(\r\n  vnode: VNode,\r\n  parentElement: Element,\r\n  index?: number,\r\n  hostComponent?: Component<unknown, unknown>\r\n): void {\r\n  if (isClassComponentVNode(vnode)) {\r\n    mountComponentVNode(vnode, parentElement, index);\r\n  } else if (isTextVNode(vnode)) {\r\n    mountTextVNode(vnode, parentElement, index);\r\n  } else if (isFragmentVNode(vnode)) {\r\n    mountFragmentVNode(vnode, parentElement, index, hostComponent);\r\n  } else if (isElementVNode(vnode)) {\r\n    mountElementVNode(vnode, parentElement, index, hostComponent);\r\n  } else {\r\n    throw new Error(`Cannot mount unknown VNode type: ${(vnode as any).type}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Mounts a text VNode to the DOM.\r\n */\r\nfunction mountTextVNode(vnode: VNode, parentElement: Element, index?: number): void {\r\n  const { props } = vnode;\r\n  const textNode = document.createTextNode(props.nodeValue);\r\n  vnode.el = textNode;\r\n\r\n  insertNode(textNode, parentElement, index);\r\n}\r\n\r\n/**\r\n * Mounts an element VNode to the DOM.\r\n */\r\nfunction mountElementVNode(\r\n  vnode: VNode,\r\n  parentElement: Element,\r\n  index?: number,\r\n  hostComponent?: Component<unknown, unknown>\r\n): void {\r\n  const { type, children } = vnode;\r\n  const element = document.createElement(type as string);\r\n  vnode.el = element;\r\n\r\n  applyVNodeProps(element, vnode, hostComponent);\r\n\r\n  children.forEach((child) => {\r\n    mountVNode(child, element, null, hostComponent);\r\n  });\r\n\r\n  insertNode(element, parentElement, index);\r\n}\r\n\r\n/**\r\n * Applies props and attributes to an element.\r\n */\r\nfunction applyVNodeProps(\r\n  element: Element,\r\n  vnode: VNode,\r\n  hostComponent?: Component<unknown, unknown>\r\n): void {\r\n  const { on: eventListeners = {}, ...props } = vnode.props;\r\n  const { key, ...attributes } = props;\r\n\r\n  vnode.listeners = addEventListeners(eventListeners, element, hostComponent);\r\n  applyAttributes(element, attributes);\r\n}\r\n\r\n/**\r\n * Mounts a fragment VNode to the DOM.\r\n */\r\nfunction mountFragmentVNode(\r\n  vnode: VNode,\r\n  parentElement: Element,\r\n  index?: number,\r\n  hostComponent?: Component<unknown, unknown>\r\n): void {\r\n  const { children } = vnode;\r\n  vnode.el = parentElement;\r\n\r\n  children.forEach((child, i) => {\r\n    mountVNode(child, parentElement, index ? index + i : null, hostComponent);\r\n  });\r\n}\r\n\r\n/**\r\n * Mounts a class component VNode to the DOM.\r\n */\r\nfunction mountComponentVNode(vnode: VNode, parentElement: Element, index?: number): void {\r\n  const ComponentClass = vnode.type as ComponentInstance;\r\n  const props = vnode.props;\r\n\r\n  // Initialize and mount the component.\r\n  const component = new ComponentClass(props, vnode.children);\r\n  component.mount(parentElement, index);\r\n\r\n  vnode.component = component;\r\n  vnode.el = component.firstElement;\r\n}\r\n\r\n/**\r\n * Inserts a node into the parent element at the specified index.\r\n */\r\nfunction insertNode(node: Node, parentElement: Element, index?: number): void {\r\n  if (index == null) {\r\n    parentElement.append(node);\r\n    return;\r\n  }\r\n  if (index < 0) {\r\n    throw new Error(`Index must be a non-negative integer, got ${index}`);\r\n  }\r\n  const children = parentElement.childNodes;\r\n  if (index >= children.length) {\r\n    parentElement.append(node);\r\n  } else {\r\n    parentElement.insertBefore(node, children[index]);\r\n  }\r\n}\r\n","import { applyAttribute, removeAttribute } from '@/attributes';\nimport { objectsDiff } from '@/utils';\n\nexport function patchAttrs(\n  el: Element,\n  oldAttrs: Record<string, any>,\n  newAttrs: Record<string, any>\n) {\n  const { added, removed, updated } = objectsDiff(oldAttrs, newAttrs);\n\n  removed.forEach((attr) => removeAttribute(el, attr));\n  [...added, ...updated].forEach((attr) => applyAttribute(el, attr, newAttrs[attr]));\n}\n","import { calculateArrayDifference, isNonBlankString } from '@/utils';\n\nexport function patchClasses(\n  el: Element,\n  oldClass: string | string[],\n  newClass: string | string[]\n) {\n  const oldClasses = toClassList(oldClass);\n  const newClasses = toClassList(newClass);\n\n  // Take all classes attached to the element\n  const currentClasses = [...new Set([...el.classList, ...oldClasses])];\n\n  const { added, removed } = calculateArrayDifference(currentClasses, newClasses);\n\n  el.classList.remove(...removed);\n  el.classList.add(...added);\n}\n\nfunction toClassList(classes: string | string[] = '') {\n  return Array.isArray(classes)\n    ? classes.filter(isNonBlankString)\n    : classes.split(/\\s+/).filter(isNonBlankString);\n}\n","import type { Component } from '@/component';\nimport { addEventListener } from '@/events';\nimport { objectsDiff } from '@/utils';\n\nexport function patchEvents(\n  el: Element,\n  oldListeners: Record<string, any> = {},\n  oldEvents: Record<string, any> = {},\n  newEvents: Record<string, any> = {},\n  hostComponent?: Component<unknown, unknown>\n) {\n  const { added, removed, updated } = objectsDiff(oldEvents, newEvents);\n\n  [...removed, ...updated].forEach((eventName) =>\n    el.removeEventListener(eventName, oldListeners[eventName])\n  );\n\n  const newListeners: Record<string, any> = {};\n  [...added, ...updated].forEach((eventName) => {\n    newListeners[eventName] = addEventListener(eventName, newEvents[eventName], el, hostComponent);\n  });\n\n  return newListeners;\n}\n","import { applyStyle, removeStyle } from '@/attributes';\nimport { objectsDiff } from '@/utils';\n\nexport function patchStyles(\n  el: Element,\n  oldStyle: Record<string, string>,\n  newStyle: Record<string, string>\n) {\n  const { added, removed, updated } = objectsDiff(oldStyle, newStyle);\n\n  removed.forEach((style) => removeStyle(el, style));\n  [...added, ...updated].forEach((style) => applyStyle(el, style, newStyle[style]));\n}\n","import type { Component } from '@/component';\r\nimport { destroyVNode } from '@/destroy-dom';\r\nimport { mountVNode } from '@/mount-dom';\r\nimport {\r\n  ArrayDiffOperationType,\r\n  areVNodeNodesEqual,\r\n  extractChildNodes,\r\n  generateArrayTransformationSequence,\r\n} from '@/utils';\r\nimport { type VNode, isClassComponentVNode, isElementVNode, isTextVNode } from '@/vdom';\r\nimport { patchAttrs } from './patch-attrs';\r\nimport { patchClasses } from './patch-classes';\r\nimport { patchEvents } from './patch-events';\r\nimport { patchStyles } from './patch-styles';\r\n\r\nexport function patchDOM(\r\n  oldVdom: VNode,\r\n  newVdom: VNode,\r\n  parentEl: Element,\r\n  hostComponent?: Component<unknown, unknown>\r\n) {\r\n  if (!areVNodeNodesEqual(oldVdom, newVdom)) {\r\n    const index = Array.from(parentEl.childNodes).indexOf(oldVdom.el);\r\n    destroyVNode(oldVdom);\r\n    mountVNode(newVdom, parentEl, index, hostComponent);\r\n    return newVdom;\r\n  }\r\n\r\n  newVdom.el = oldVdom.el;\r\n\r\n  if (isTextVNode(newVdom)) {\r\n    patchText(oldVdom, newVdom);\r\n    return newVdom;\r\n  }\r\n  if (isClassComponentVNode(newVdom)) {\r\n    patchComponent(oldVdom, newVdom);\r\n    // TODO: patchChildren for class components\r\n    return newVdom;\r\n  }\r\n\r\n  if (isElementVNode(newVdom)) {\r\n    patchElement(oldVdom, newVdom, hostComponent);\r\n  }\r\n\r\n  patchChildren(oldVdom, newVdom, hostComponent);\r\n  return newVdom;\r\n}\r\n\r\nfunction patchText(oldVdom: VNode, newVdom: VNode) {\r\n  const { el } = oldVdom;\r\n  const { nodeValue: oldTNodeValue } = oldVdom.props;\r\n  const { nodeValue: newNodeValue } = newVdom.props;\r\n\r\n  if (oldTNodeValue !== newNodeValue) {\r\n    el.nodeValue = newNodeValue;\r\n  }\r\n}\r\n\r\nfunction patchElement(oldVdom: VNode, newVdom: VNode, hostComponent?: Component<unknown, unknown>) {\r\n  const el = oldVdom.el as Element;\r\n  const { class: oldClass, style: oldStyle, on: oldEvents, ...oldAttrs } = oldVdom.props;\r\n  const { class: newClass, style: newStyle, on: newEvents, ...newAttrs } = newVdom.props;\r\n\r\n  patchAttrs(el, oldAttrs, newAttrs);\r\n  patchClasses(el, oldClass, newClass);\r\n  patchStyles(el, oldStyle, newStyle);\r\n  newVdom.listeners = patchEvents(el, oldVdom.listeners, oldEvents, newEvents, hostComponent);\r\n}\r\n\r\nfunction patchComponent(oldVdom: VNode, newVdom: VNode) {\r\n  const { component } = oldVdom;\r\n  const { key, ...props } = newVdom.props;\r\n\r\n  component.updateProps(props);\r\n  newVdom.component = component;\r\n  newVdom.el = component.firstElement;\r\n}\r\n\r\nfunction patchChildren(\r\n  oldVdom: VNode,\r\n  newVdom: VNode,\r\n  hostComponent?: Component<unknown, unknown>\r\n) {\r\n  const oldChildren = extractChildNodes(oldVdom);\r\n  const newChildren = extractChildNodes(newVdom);\r\n  const parentEl = oldVdom.el as Element;\r\n  const diffSeq = generateArrayTransformationSequence(oldChildren, newChildren, areVNodeNodesEqual);\r\n  diffSeq.forEach(({ op, index, originalIndex, item }) => {\r\n    const offset = hostComponent?.offset ?? 0;\r\n\r\n    switch (op) {\r\n      case ArrayDiffOperationType.ADD:\r\n        mountVNode(item, parentEl, index + offset, hostComponent);\r\n        break;\r\n\r\n      case ArrayDiffOperationType.REMOVE:\r\n        destroyVNode(item);\r\n        break;\r\n\r\n      case ArrayDiffOperationType.MOVE: {\r\n        const elAtTargetIndex = parentEl.childNodes[index + offset];\r\n        parentEl.insertBefore(oldChildren[originalIndex].el, elAtTargetIndex);\r\n        patchDOM(oldChildren[originalIndex], newChildren[index], parentEl, hostComponent);\r\n        break;\r\n      }\r\n\r\n      case ArrayDiffOperationType.NOOP:\r\n        patchDOM(oldChildren[originalIndex], newChildren[index], parentEl, hostComponent);\r\n        break;\r\n    }\r\n  });\r\n}\r\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","import { destroyVNode } from '@/destroy-dom';\r\nimport { mountVNode } from '@/mount-dom';\r\nimport { patchDOM } from '@/patch-dom';\r\nimport { extractChildNodes } from '@/utils';\r\nimport { type VNode, isClassComponent, isElementVNode, isFragmentVNode } from '@/vdom';\r\nimport equals from 'fast-deep-equal';\r\n\r\nexport abstract class Component<TProps, TState> {\r\n  #isMounted = false;\r\n  #vdom: VNode = null;\r\n  #hostEl: Element = null;\r\n\r\n  state: Readonly<TState>;\r\n  props: Readonly<TProps>;\r\n  children: VNode[];\r\n\r\n  #refs: Record<string, Element> = {};\r\n\r\n  constructor(props?: TProps, children?: VNode[]) {\r\n    this.props = props ?? ({} as TProps);\r\n    this.children = children ?? [];\r\n  }\r\n\r\n  get $refs() {\r\n    return this.#refs;\r\n  }\r\n\r\n  get elements(): Element[] {\r\n    if (!this.#vdom) return [];\r\n    return isFragmentVNode(this.#vdom)\r\n      ? this.#extractFragmentElements()\r\n      : [this.#vdom.el as Element];\r\n  }\r\n\r\n  get firstElement(): Element | null {\r\n    return this.elements[0] ?? null;\r\n  }\r\n\r\n  get offset(): number {\r\n    return isFragmentVNode(this.#vdom)\r\n      ? Array.from(this.#hostEl.childNodes).indexOf(this.firstElement)\r\n      : 0;\r\n  }\r\n\r\n  abstract render(): VNode;\r\n  abstract onMounted(): void;\r\n  abstract onUnmounted(): void;\r\n  abstract onUpdated(): void;\r\n\r\n  updateProps(props: Partial<TProps>) {\r\n    const newProps = { ...this.props, ...props };\r\n    if (equals(this.props, newProps)) return;\r\n    this.props = newProps;\r\n    this.#patch();\r\n  }\r\n\r\n  updateState(state: Partial<TState> | ((prevState: TState) => TState)) {\r\n    const newState = typeof state === 'function' ? state(this.state) : { ...this.state, ...state };\r\n    if (equals(this.state, newState)) return; // Skip if state hasn't changed\r\n    this.state = newState;\r\n    this.#patch();\r\n  }\r\n\r\n  mount(hostEl: Element, index: number = null) {\r\n    if (this.#isMounted) {\r\n      throw new Error('Component is already mounted');\r\n    }\r\n    this.#vdom = this.render();\r\n    mountVNode(this.#vdom, hostEl, index, this);\r\n\r\n    this.#setRefs();\r\n    this.#hostEl = hostEl;\r\n    this.#isMounted = true;\r\n    this.onMounted();\r\n  }\r\n\r\n  unmount() {\r\n    if (!this.#isMounted) {\r\n      throw new Error('Component is not mounted');\r\n    }\r\n    this.#refs = {};\r\n    destroyVNode(this.#vdom);\r\n    this.#vdom = null;\r\n    this.#hostEl = null;\r\n    this.#isMounted = false;\r\n    this.onUnmounted();\r\n  }\r\n\r\n  #patch() {\r\n    if (!this.#isMounted) {\r\n      throw new Error('Component is not mounted');\r\n    }\r\n    const vdom = this.render();\r\n    this.#vdom = patchDOM(this.#vdom, vdom, this.#hostEl, this);\r\n    this.onUpdated();\r\n  }\r\n\r\n  #setRefs() {\r\n    this.#setRefForVNode(this.#vdom);\r\n    this.children.forEach((child) => {\r\n      if (child.ref) {\r\n        this.#setRefForVNode(child);\r\n      }\r\n    });\r\n  }\r\n\r\n  #setRefForVNode(vnode: VNode) {\r\n    if (isElementVNode(vnode) && vnode.ref) {\r\n      this.#setRef(vnode.ref, vnode.el as Element);\r\n    }\r\n  }\r\n\r\n  #setRef(ref: string, el: Element) {\r\n    if (this.#refs[ref]) {\r\n      console.warn(`Ref \"${ref}\" already exists`);\r\n      return;\r\n    }\r\n    this.#refs[ref] = el;\r\n  }\r\n\r\n  #extractFragmentElements(): Element[] {\r\n    return extractChildNodes(this.#vdom).flatMap((child) => {\r\n      if (isClassComponent(child.type)) {\r\n        return child.component.elements;\r\n      }\r\n      return child.el as Element;\r\n    });\r\n  }\r\n}\r\n","import { hasOwnProperty, noOp } from '@/utils';\r\nimport type { VNode } from '@/vdom';\r\nimport { Component } from './component';\r\nimport type { ComponentInstance, DefineComponentArgs } from './types';\r\n\r\nexport function defineComponent<TProps, TState, TMethods>({\r\n  render,\r\n  state,\r\n  methods,\r\n  onMounted = noOp,\r\n  onUnmounted = noOp,\r\n  onUpdated = noOp,\r\n}: DefineComponentArgs<TProps, TState, TMethods> &\r\n  ThisType<Component<TProps, TState> & TMethods>): ComponentInstance<TProps, TState, TMethods> {\r\n  class BaseComponent extends Component<TProps, TState> {\r\n    constructor(props?: TProps, children?: VNode[]) {\r\n      super(props, children);\r\n      this.state = state ? state(props) : ({} as TState);\r\n    }\r\n\r\n    render(): any {\r\n      return render.call(this, this.props, { children: this.children });\r\n    }\r\n\r\n    onMounted() {\r\n      return Promise.resolve(onMounted.call(this));\r\n    }\r\n    onUnmounted() {\r\n      return Promise.resolve(onUnmounted.call(this));\r\n    }\r\n    onUpdated() {\r\n      return Promise.resolve(onUpdated.call(this));\r\n    }\r\n  }\r\n\r\n  for (const methodName in methods) {\r\n    if (hasOwnProperty(BaseComponent, methodName) || methodName in BaseComponent.prototype) {\r\n      throw new Error(`Method \"${methodName}()\" already exists in the component. Can't override`);\r\n    }\r\n    (BaseComponent.prototype as any)[methodName] = methods[methodName];\r\n  }\r\n\r\n  return BaseComponent as any;\r\n}\r\n","import { filterNonNullable } from '@/utils';\r\nimport { type VNode, type VNodeChildren, createTextVNode, isVNode } from '../vnode';\r\n\r\nexport function toVNode(children: VNodeChildren[]): VNode[] {\r\n  return children.map((child) => (isVNode(child) ? child : createTextVNode(String(child))));\r\n}\r\n\r\nexport function normalizeChildren(children: VNodeChildren | VNodeChildren[]): VNode[] {\r\n  if (!Array.isArray(children)) {\r\n    children = [children];\r\n  }\r\n  return toVNode(filterNonNullable(children));\r\n}\r\n","import { Component, type ComponentInstance } from '@/component';\r\nimport type { FunctionComponent } from '@/components/types';\r\nimport type { WritableAttributes } from '@/types';\r\nimport { isPrototypeOf } from '@/utils';\r\nimport { normalizeChildren } from './helpers';\r\nimport type { Attributes, ElementVNodeListeners, Events } from './types';\r\n\r\nexport const TextVNode: unique symbol = Symbol.for('text');\r\nexport const FragmentVNode: unique symbol = Symbol.for('fragment');\r\n\r\nexport type VNodeTypes = string | ComponentInstance | typeof TextVNode | typeof FragmentVNode;\r\n\r\nexport interface VNode {\r\n  _isVNode: true;\r\n  type: VNodeTypes;\r\n  props: VNodeProps<any>;\r\n  children: VNode[];\r\n  el: Element | Text | null;\r\n  ref: string | null;\r\n  listeners: ElementVNodeListeners | null;\r\n  component: Component<any, any> | null;\r\n}\r\n\r\nexport type VNodeChildren = VNode | string | number | boolean | null | undefined | void;\r\n\r\nexport type VNodeProps<T> = {\r\n  class?: string | string[];\r\n  style?: WritableAttributes<CSSStyleDeclaration>;\r\n  on?: Events;\r\n} & Attributes &\r\n  T;\r\n\r\nexport function createVNode(\r\n  type: VNodeTypes,\r\n  props?: VNodeProps<any> | null,\r\n  children?: VNodeChildren[]\r\n): VNode {\r\n  const { ref: rawRef, ...others } = props ?? {};\r\n\r\n  const normalizedChildren = normalizeChildren(children || []);\r\n  const ref = typeof rawRef === 'string' ? rawRef : null;\r\n  return {\r\n    _isVNode: true,\r\n    type,\r\n    props: others,\r\n    children: normalizedChildren,\r\n    ref,\r\n    el: null,\r\n    listeners: null,\r\n    component: null,\r\n  } satisfies VNode;\r\n}\r\n\r\nexport function createTextVNode(value: string) {\r\n  return createVNode(TextVNode, { nodeValue: value });\r\n}\r\nexport function createFragmentVNode(children: VNodeChildren[]): VNode {\r\n  return createVNode(FragmentVNode, null, children);\r\n}\r\n\r\nexport function isVNode(value?: any): value is VNode {\r\n  return value ? value?._isVNode === true : false;\r\n}\r\n\r\nexport function isTextVNode(value?: unknown): boolean {\r\n  return isVNode(value) && value.type === TextVNode;\r\n}\r\n\r\nexport function isFragmentVNode(value?: unknown): boolean {\r\n  return isVNode(value) && value.type === FragmentVNode;\r\n}\r\n\r\nexport function isElementVNode(value?: unknown): boolean {\r\n  return isVNode(value) && typeof value.type === 'string';\r\n}\r\n\r\nexport function isClassComponentVNode(value?: unknown): boolean {\r\n  return isVNode(value) && isClassComponent(value.type);\r\n}\r\n\r\nexport function isClassComponent(type: unknown): type is ComponentInstance<any, any, any> {\r\n  return isFunctionComponent(type) && isPrototypeOf(Component, type);\r\n}\r\n\r\nexport function isFunctionComponent(type: unknown): type is FunctionComponent<any> {\r\n  return typeof type === 'function';\r\n}\r\n","import { removeEventListeners } from '@/events';\r\nimport { type VNode, isClassComponentVNode } from '@/vdom';\r\n\r\n/**\r\n * Recursively destroys a VNode and its children, unmounting components and cleaning up DOM elements.\r\n */\r\nexport function destroyVNode(vnode: VNode): void {\r\n  if (isClassComponentVNode(vnode)) {\r\n    destroyComponentVNode(vnode);\r\n  } else {\r\n    destroyElementVNode(vnode);\r\n  }\r\n}\r\n\r\n/**\r\n * Destroys a class component VNode by unmounting its component.\r\n */\r\nfunction destroyComponentVNode(vnode: VNode): void {\r\n  vnode.component?.unmount();\r\n}\r\n\r\n/**\r\n * Destroys a non-component VNode by removing its DOM element, event listeners, and recursively cleaning children.\r\n */\r\nfunction destroyElementVNode(vnode: VNode): void {\r\n  const { el, children, listeners } = vnode;\r\n\r\n  if (listeners) {\r\n    if (el instanceof Element) {\r\n      removeEventListeners(listeners, el);\r\n    }\r\n    vnode.listeners = null;\r\n  }\r\n\r\n  children.forEach(destroyVNode);\r\n  el?.remove();\r\n}\r\n","import type { ComponentInstance, InferProps } from '@/component';\r\nimport type { FunctionComponent } from '@/components';\r\nimport type { WritableAttributes } from '@/types';\r\nimport {\r\n  type Attributes,\r\n  type ElementTag,\r\n  type VNode,\r\n  type VNodeChildren,\r\n  type VNodeProps,\r\n  createFragmentVNode,\r\n  createVNode,\r\n  isClassComponent,\r\n  isFunctionComponent,\r\n} from '@/vdom';\r\n\r\ntype ElementProps<T extends ElementTag> = WritableAttributes<HTMLElementTagNameMap[T]>;\r\ntype InferComponentProps<T> = T extends ComponentInstance\r\n  ? InferProps<T>\r\n  : T extends FunctionComponent<any>\r\n    ? Parameters<T>[0]\r\n    : never;\r\n\r\nexport function h<T>(\r\n  type: T,\r\n  props?: (Attributes & InferComponentProps<T>) | null,\r\n  children?: VNodeChildren[] | null\r\n): VNode;\r\nexport function h<T extends ElementTag>(\r\n  type: T,\r\n  props?: VNodeProps<ElementProps<T>> | null,\r\n  children?: VNodeChildren[] | null\r\n): VNode;\r\nexport function h(type: any, props?: any, children?: VNodeChildren[] | null) {\r\n  if (typeof type === 'string') {\r\n    return createVNode(type, props, children);\r\n  }\r\n  if (isClassComponent(type)) {\r\n    return createVNode(type, props, children);\r\n  }\r\n  if (isFunctionComponent(type)) {\r\n    return type(props, { children }) as any;\r\n  }\r\n\r\n  throw new Error(\r\n    `Invalid component type passed to \"h\": expected a string, class component, or function component but received ${typeof type} (${type}).`\r\n  );\r\n}\r\n\r\nexport function hFragment(vNodes: VNodeChildren[]): VNode {\r\n  return createFragmentVNode(vNodes);\r\n}\r\n","import type { ComponentInstance } from '@/component';\r\nimport { destroyVNode } from '@/destroy-dom';\r\nimport { h } from '@/h';\r\nimport { mountVNode } from '@/mount-dom';\r\nimport type { VNode } from '@/vdom';\r\n\r\nexport function createApp<TProps>(RootComponent: ComponentInstance<TProps>, props: TProps = null) {\r\n  let parentEl: Element = null;\r\n  let isMounted: boolean = false;\r\n  let vdom: VNode = null;\r\n\r\n  function reset() {\r\n    parentEl = null;\r\n    isMounted = false;\r\n    vdom = null;\r\n  }\r\n\r\n  return {\r\n    mount(_parentEl: Element | null) {\r\n      if (!_parentEl) {\r\n        console.warn('createApp.mount(): Element does not exists.');\r\n        return;\r\n      }\r\n      if (isMounted) {\r\n        throw new Error('The application is already mounted');\r\n      }\r\n\r\n      parentEl = _parentEl;\r\n      vdom = h(RootComponent, props);\r\n      mountVNode(vdom, parentEl);\r\n\r\n      isMounted = true;\r\n    },\r\n\r\n    unmount() {\r\n      if (!isMounted) {\r\n        throw new Error('The application is not mounted');\r\n      }\r\n      destroyVNode(vdom);\r\n      reset();\r\n    },\r\n  };\r\n}\r\n","import type { ComponentContext } from '@/component';\r\nimport { hFragment } from '@/h';\r\nimport type { Attributes } from '@/vdom';\r\n\r\nexport function Fragment(_props: Attributes, { children }: ComponentContext) {\r\n  return hFragment(children);\r\n}\r\n"],"names":["addEventListener","eventName","handler","element","hostComponent","wrappedHandler","args","addEventListeners","eventListeners","activeListeners","listener","removeEventListeners","filterNonNullable","arr","value","calculateArrayDifference","originalArray","updatedArray","ArrayDiffOperationType","IndexedArrayTracker","#trackedArray","#originalItemIndices","#compareFn","array","compareFn","_","i","currentIndex","trackedArray","updatedItem","item","originalIndex","currentItem","index","fromIndex","movedItem","operations","length","generateArrayTransformationSequence","a","b","transformationSteps","tracker","noOp","areVNodeNodesEqual","nodeA","nodeB","typeA","keyA","typeB","keyB","objectsDiff","oldObj","newObj","oldKeys","newKeys","key","hasOwnProperty","obj","prop","isPrototypeOf","extractChildNodes","vnode","isTextVNode","extractedChildren","child","isFragmentVNode","isNonBlankString","kebabize","str","applyAttributes","attributes","className","style","otherAttributes","applyClass","property","applyStyle","attributeName","attributeValue","applyAttribute","propertyName","propertyValue","removeStyle","removeAttribute","mountVNode","parentElement","isClassComponentVNode","mountComponentVNode","mountTextVNode","mountFragmentVNode","isElementVNode","mountElementVNode","props","textNode","insertNode","type","children","applyVNodeProps","ComponentClass","component","node","patchAttrs","el","oldAttrs","newAttrs","added","removed","updated","attr","patchClasses","oldClass","newClass","oldClasses","toClassList","newClasses","currentClasses","classes","patchEvents","oldListeners","oldEvents","newEvents","newListeners","patchStyles","oldStyle","newStyle","patchDOM","oldVdom","newVdom","parentEl","destroyVNode","patchText","patchComponent","patchElement","patchChildren","oldTNodeValue","newNodeValue","oldChildren","newChildren","op","offset","elAtTargetIndex","fastDeepEqual","equal","keys","Component","#isMounted","#vdom","#hostEl","#refs","#extractFragmentElements","newProps","equals","#patch","state","newState","hostEl","#setRefs","vdom","#setRefForVNode","#setRef","ref","isClassComponent","defineComponent","render","methods","onMounted","onUnmounted","onUpdated","BaseComponent","methodName","toVNode","isVNode","createTextVNode","normalizeChildren","TextVNode","FragmentVNode","createVNode","rawRef","others","normalizedChildren","createFragmentVNode","isFunctionComponent","destroyComponentVNode","destroyElementVNode","listeners","h","hFragment","vNodes","createApp","RootComponent","isMounted","reset","_parentEl","Fragment","_props"],"mappings":"AAIO,SAASA,EACdC,GACAC,GACAC,GACAC,IAA6C,MAC7C;AACM,QAAAC,IAAgC,IAAIC,MAAS;AACjD,IAAAF,IAAgBF,EAAQ,MAAME,GAAeE,CAAI,IAAIJ,EAAQ,GAAGI,CAAI;AAAA,EACtE;AACQ,SAAAH,EAAA,iBAAiBF,GAAWI,CAAc,GAC3CA;AACT;AAEO,SAASE,EACdC,IAAwC,CAAA,GACxCL,GACAC,IAA6C,MAC7C;AACA,QAAMK,IAAyC,CAAC;AAEzC,gBAAA,QAAQD,CAAc,EAAE,QAAQ,CAAC,CAACP,GAAWC,CAAO,MAAM;AAC/D,UAAMQ,IAAWV,EAAiBC,GAAWC,GAASC,GAASC,CAAa;AAC5E,IAAAK,EAAgBR,CAAS,IAAIS;AAAA,EAAA,CAC9B,GAEMD;AACT;AAEgB,SAAAE,EAAqBH,GAAuCL,GAAkB;AACrF,SAAA,QAAQK,CAAc,EAAE,QAAQ,CAAC,CAACP,GAAWC,CAAO,MAAM;AACvD,IAAAC,EAAA,oBAAoBF,GAAWC,CAAO;AAAA,EAAA,CAC/C;AACH;AClCO,SAASU,EAAqBC,GAAsC;AACzE,SAAOA,EAAI,OAAO,CAACC,MAAsBA,KAAS,IAAI;AACxD;AAEgB,SAAAC,EACdC,GACAC,GAC8B;AACvB,SAAA;AAAA,IACL,OAAOA,EAAa,OAAO,CAACd,MAAY,CAACa,EAAc,SAASb,CAAO,CAAC;AAAA,IACxE,SAASa,EAAc,OAAO,CAACb,MAAY,CAACc,EAAa,SAASd,CAAO,CAAC;AAAA,EAC5E;AACF;AAEO,MAAMe,IAAyB;AAAA,EACpC,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,MAAM;AACR;AAUO,MAAMC,EAAuB;AAAA,EAClCC;AAAA,EACAC;AAAA,EACAC;AAAA,EAEA,YAAYC,GAAyBC,GAAoC;AAClE,SAAAJ,KAAgB,CAAC,GAAGG,CAAK,GAC9B,KAAKF,KAAuBE,EAAM,IAAI,CAACE,GAAGC,MAAMA,CAAC,GACjD,KAAKJ,KAAaE;AAAA,EAAA;AAAA,EAGpB,IAAI,SAAS;AACX,WAAO,KAAKJ,GAAc;AAAA,EAAA;AAAA,EAG5B,mBAAmBO,GAAsBV,GAAyC;AAC5E,QAAAU,KAAgB,KAAK,OAAe,QAAA;AACxC,UAAMH,IAAY,KAAKF,IACjBM,IAAe,KAAKR;AACnB,WAAA,CAACH,EAAa,KAAK,CAACY,MAAgBL,EAAUI,EAAaD,CAAY,GAAGE,CAAW,CAAC;AAAA,EAAA;AAAA,EAG/F,gBAAgBF,GAAsBV,GAAyC;AACzE,WAAAU,KAAgB,KAAK,SAAe,KACjC,KAAKL,GAAW,KAAKF,GAAcO,CAAY,GAAGV,EAAaU,CAAY,CAAC;AAAA,EAAA;AAAA,EAGrF,WAAWA,GAAyC;AAClD,UAAM,CAACG,CAAI,IAAI,KAAKV,GAAc,OAAOO,GAAc,CAAC,GAClD,CAACI,CAAa,IAAI,KAAKV,GAAqB,OAAOM,GAAc,CAAC;AACjE,WAAA;AAAA,MACL,IAAIT,EAAuB;AAAA,MAC3B,OAAOS;AAAA,MACP,MAAAG;AAAA,MACA,eAAAC;AAAA,IACF;AAAA,EAAA;AAAA,EAGF,QAAQC,GAAgBL,GAAyC;AAC/D,gBAAKP,GAAc,OAAOO,GAAc,GAAGK,CAAW,GACtD,KAAKX,GAAqB,OAAOM,GAAc,GAAG,EAAE,GAC7C;AAAA,MACL,IAAIT,EAAuB;AAAA,MAC3B,OAAOS;AAAA,MACP,MAAMK;AAAA,IACR;AAAA,EAAA;AAAA,EAGF,SAASA,GAAgBC,GAAkC;AACnD,UAAAC,IAAY,KAAKd,GAAc,UAAU,CAACU,MAAS,KAAKR,GAAWQ,GAAME,CAAW,CAAC;AAC3F,QAAIE,MAAc,GAAU,OAAA,IAAI,MAAM,gBAAgB;AACtD,UAAM,CAACC,CAAS,IAAI,KAAKf,GAAc,OAAOc,GAAW,CAAC,GACpD,CAACH,CAAa,IAAI,KAAKV,GAAqB,OAAOa,GAAW,CAAC;AAErE,gBAAKd,GAAc,OAAOa,GAAO,GAAGE,CAAS,GAC7C,KAAKd,GAAqB,OAAOY,GAAO,GAAGF,CAAa,GAEjD;AAAA,MACL,IAAIb,EAAuB;AAAA,MAC3B,MAAMgB;AAAA,MACN,OAAAD;AAAA,MACA,MAAME;AAAA,MACN,eAAAJ;AAAA,IACF;AAAA,EAAA;AAAA,EAGF,qBAAqBG,GAAwC;AAC3D,UAAME,IAAa,CAAC;AACb,WAAA,KAAK,SAASF;AACnB,MAAAE,EAAW,KAAK,KAAK,WAAWF,CAAS,CAAC;AAErC,WAAAE;AAAA,EAAA;AAAA,EAGT,cAAcN,GAASI,GAA2B;AAChD,UAAMG,IAAS,KAAK,QACdb,IAAY,KAAKF,IACjBM,IAAe,KAAKR;AAEtB,QAAAc,IAAY,KAAKA,KAAaG;AACzB,aAAA;AAET,aAAS,IAAIH,GAAW,IAAIG,GAAQ;AAClC,UAAIb,EAAUM,GAAMF,EAAa,CAAC,CAAC;AAC1B,eAAA;AAGJ,WAAA;AAAA,EAAA;AAAA,EAGT,SAASK,GAAkC;AAClC,WAAA;AAAA,MACL,IAAIf,EAAuB;AAAA,MAC3B,OAAAe;AAAA,MACA,MAAM,KAAKb,GAAca,CAAK;AAAA,MAC9B,eAAe,KAAKZ,GAAqBY,CAAK;AAAA,IAChD;AAAA,EAAA;AAEJ;AAEgB,SAAAK,EACdtB,GACAC,GACAO,IAAqC,CAACe,GAAGC,MAAMD,MAAMC,GACrD;AACA,QAAMC,IAA2C,CAAC,GAC5CC,IAAU,IAAIvB,EAAoBH,GAAeQ,CAAS;AAEhE,WAASG,IAAe,GAAGA,IAAeV,EAAa,QAAQU,KAAgB;AACvE,UAAAK,IAAcf,EAAaU,CAAY;AAE7C,QAAIe,EAAQ,mBAAmBf,GAAcV,CAAY,GAAG;AAC1D,MAAAwB,EAAoB,KAAKC,EAAQ,WAAWf,CAAY,CAAC,GACzDA;AACA;AAAA,IAAA;AAGF,QAAIe,EAAQ,gBAAgBf,GAAcV,CAAY,GAAG;AACvD,MAAAwB,EAAoB,KAAKC,EAAQ,SAASf,CAAY,CAAC;AACvD;AAAA,IAAA;AAGF,QAAIe,EAAQ,cAAcV,GAAaL,CAAY,MAAM,IAAI;AAC3D,MAAAc,EAAoB,KAAKC,EAAQ,QAAQV,GAAaL,CAAY,CAAC;AACnE;AAAA,IAAA;AAGF,IAAAc,EAAoB,KAAKC,EAAQ,SAASV,GAAaL,CAAY,CAAC;AAAA,EAAA;AAGtE,SAAAc,EAAoB,KAAK,GAAGC,EAAQ,qBAAqBzB,EAAa,MAAM,CAAC,GACtEwB;AACT;ACnKO,SAASE,IAAO;AAAC;ACER,SAAAC,EAAmBC,GAAcC,GAAuB;AAClE,MAAAD,EAAM,SAASC,EAAM;AAChB,WAAA;AAGH,QAAA;AAAA,IACJ,MAAMC;AAAA,IACN,OAAO,EAAE,KAAKC,EAAK;AAAA,EAAA,IACjBH,GACE;AAAA,IACJ,MAAMI;AAAA,IACN,OAAO,EAAE,KAAKC,EAAK;AAAA,EAAA,IACjBJ;AAGG,SAAAC,MAAUE,KAASD,MAASE;AACrC;AClBO,SAASC,EACdC,IAAY,IACZC,IAAY,CAAA,GACZ;AACM,QAAAC,IAAU,OAAO,KAAKF,CAAM,GAC5BG,IAAU,OAAO,KAAKF,CAAM;AAE3B,SAAA;AAAA,IACL,OAAOE,EAAQ,OAAO,CAACC,MAAQ,EAAEA,KAAOJ,EAAO;AAAA,IAC/C,SAASE,EAAQ,OAAO,CAACE,MAAQ,EAAEA,KAAOH,EAAO;AAAA,IACjD,SAASE,EAAQ,OAAO,CAACC,MAAQA,KAAOJ,KAAUA,EAAOI,CAAG,MAAMH,EAAOG,CAAG,CAAC;AAAA,EAC/E;AACF;AAEgB,SAAAC,EAAeC,GAAaC,GAAmB;AAC7D,SAAO,OAAO,UAAU,eAAe,KAAKD,GAAKC,CAAI;AACvD;ACdO,MAAMC,IAAgB,SAAS,KAAK,KAAK,OAAO,UAAU,aAAa;AAEvE,SAASC,EAAkBC,GAAuB;AACvD,MAAI,CAACA,EAAM,YAAYC,EAAYD,CAAK;AACtC,WAAO,CAAC;AAGV,QAAME,IAA6B,CAAC;AAEzB,aAAAC,KAASH,EAAM;AACpB,IAAAI,EAAgBD,CAAK,IACvBD,EAAkB,KAAK,GAAGH,EAAkBI,CAAK,CAAC,IAElDD,EAAkB,KAAKC,CAAK;AAIzB,SAAAD;AACT;ACpBO,SAASG,EAAiBrD,GAAwB;AAChD,SAAAA,EAAM,WAAW;AAC1B;AAEO,SAASsD,EAASC,GAAa;AACpC,SAAOA,EAAI,QAAQ,mBAAmB,OAAO,EAAE,YAAY;AAC7D;ACQgB,SAAAC,EAAgBnE,GAA6BoE,GAAkC;AAC7F,QAAM,EAAE,OAAOC,GAAW,OAAAC,GAAO,GAAGC,EAAoB,IAAAH;AAExD,EAAIC,KACFG,EAAWxE,GAASqE,CAAS,GAG3BC,KACK,OAAA,QAAQA,CAAK,EAAE,QAAQ,CAAC,CAACG,GAAU9D,CAAK,MAAM;AACxC,IAAA+D,EAAA1E,GAASyE,GAAU9D,CAAK;AAAA,EAAA,CACpC;AAGH,aAAW,CAACgE,GAAeC,CAAc,KAAK,OAAO;AAAA,IACnDL;AAAA,EAAA;AAEe,IAAAM,EAAA7E,GAAS2E,GAAeC,CAAc;AAEzD;AAEgB,SAAAJ,EAAWxE,GAA6BqE,GAAoC;AAC1F,EAAArE,EAAQ,YAAY,IAEhB,OAAOqE,KAAc,WACvBrE,EAAQ,YAAYqE,IACX,MAAM,QAAQA,CAAS,KAChCrE,EAAQ,UAAU,IAAI,GAAGqE,EAAU,OAAOL,CAAgB,CAAC;AAE/D;AAEgB,SAAAU,EACd1E,GACA8E,GACAC,GACM;AACN,EAAA/E,EAAQ,MAAM,YAAYiE,EAASa,CAAY,GAAGC,CAAa;AACjE;AAEgB,SAAAC,EAAYhF,GAA6B8E,GAA4B;AACnF,EAAA9E,EAAQ,MAAM,eAAeiE,EAASa,CAAY,CAAC;AACrD;AAEgB,SAAAD,EACd7E,GACA2E,GACAC,GACM;AACN,EAAIA,KAAkB,OACpBK,EAAgBjF,GAAS2E,CAAa,IAC7BA,EAAc,WAAW,OAAO,IACjC3E,EAAA,aAAa2E,GAAeC,CAAc,IAElD5E,EAAQ2E,CAAa,IAAIC;AAE7B;AAEgB,SAAAK,EACdjF,GACA2E,GACM;AACN,EAAA3E,EAAQ2E,CAAa,IAAI,MACzB3E,EAAQ,gBAAgB2E,CAAa;AACvC;AC9DO,SAASO,EACdvB,GACAwB,GACArD,GACA7B,GACM;AACF,MAAAmF,EAAsBzB,CAAK;AACT,IAAA0B,GAAA1B,GAAOwB,GAAerD,CAAK;AAAA,WACtC8B,EAAYD,CAAK;AACX,IAAA2B,GAAA3B,GAAOwB,GAAerD,CAAK;AAAA,WACjCiC,EAAgBJ,CAAK;AACX,IAAA4B,GAAA5B,GAAOwB,GAAerD,GAAO7B,CAAa;AAAA,WACpDuF,EAAe7B,CAAK;AACX,IAAA8B,GAAA9B,GAAOwB,GAAerD,GAAO7B,CAAa;AAAA;AAE5D,UAAM,IAAI,MAAM,oCAAqC0D,EAAc,IAAI,EAAE;AAE7E;AAKA,SAAS2B,GAAe3B,GAAcwB,GAAwBrD,GAAsB;AAC5E,QAAA,EAAE,OAAA4D,MAAU/B,GACZgC,IAAW,SAAS,eAAeD,EAAM,SAAS;AACxD,EAAA/B,EAAM,KAAKgC,GAEAC,EAAAD,GAAUR,GAAerD,CAAK;AAC3C;AAKA,SAAS2D,GACP9B,GACAwB,GACArD,GACA7B,GACM;AACA,QAAA,EAAE,MAAA4F,GAAM,UAAAC,EAAA,IAAanC,GACrB3D,IAAU,SAAS,cAAc6F,CAAc;AACrD,EAAAlC,EAAM,KAAK3D,GAEK+F,GAAA/F,GAAS2D,GAAO1D,CAAa,GAEpC6F,EAAA,QAAQ,CAAChC,MAAU;AACf,IAAAoB,EAAApB,GAAO9D,GAAS,MAAMC,CAAa;AAAA,EAAA,CAC/C,GAEU2F,EAAA5F,GAASmF,GAAerD,CAAK;AAC1C;AAKA,SAASiE,GACP/F,GACA2D,GACA1D,GACM;AACA,QAAA,EAAE,IAAII,IAAiB,CAAA,GAAI,GAAGqF,EAAA,IAAU/B,EAAM,OAC9C,EAAE,KAAAN,GAAK,GAAGe,EAAA,IAAesB;AAE/B,EAAA/B,EAAM,YAAYvD,EAAkBC,GAAgBL,GAASC,CAAa,GAC1EkE,EAAgBnE,GAASoE,CAAU;AACrC;AAKA,SAASmB,GACP5B,GACAwB,GACArD,GACA7B,GACM;AACA,QAAA,EAAE,UAAA6F,MAAanC;AACrB,EAAAA,EAAM,KAAKwB,GAEFW,EAAA,QAAQ,CAAChC,GAAO,MAAM;AAC7B,IAAAoB,EAAWpB,GAAOqB,GAAerD,IAAQA,IAAQ,IAAI,MAAM7B,CAAa;AAAA,EAAA,CACzE;AACH;AAKA,SAASoF,GAAoB1B,GAAcwB,GAAwBrD,GAAsB;AACvF,QAAMkE,IAAiBrC,EAAM,MACvB+B,IAAQ/B,EAAM,OAGdsC,IAAY,IAAID,EAAeN,GAAO/B,EAAM,QAAQ;AAChD,EAAAsC,EAAA,MAAMd,GAAerD,CAAK,GAEpC6B,EAAM,YAAYsC,GAClBtC,EAAM,KAAKsC,EAAU;AACvB;AAKA,SAASL,EAAWM,GAAYf,GAAwBrD,GAAsB;AAC5E,MAAIA,KAAS,MAAM;AACjB,IAAAqD,EAAc,OAAOe,CAAI;AACzB;AAAA,EAAA;AAEF,MAAIpE,IAAQ;AACV,UAAM,IAAI,MAAM,6CAA6CA,CAAK,EAAE;AAEtE,QAAMgE,IAAWX,EAAc;AAC3B,EAAArD,KAASgE,EAAS,SACpBX,EAAc,OAAOe,CAAI,IAEzBf,EAAc,aAAae,GAAMJ,EAAShE,CAAK,CAAC;AAEpD;AC/HgB,SAAAqE,GACdC,GACAC,GACAC,GACA;AACA,QAAM,EAAE,OAAAC,GAAO,SAAAC,GAAS,SAAAC,EAAY,IAAAzD,EAAYqD,GAAUC,CAAQ;AAElE,EAAAE,EAAQ,QAAQ,CAACE,MAASzB,EAAgBmB,GAAIM,CAAI,CAAC,GACnD,CAAC,GAAGH,GAAO,GAAGE,CAAO,EAAE,QAAQ,CAACC,MAAS7B,EAAeuB,GAAIM,GAAMJ,EAASI,CAAI,CAAC,CAAC;AACnF;ACVgB,SAAAC,GACdP,GACAQ,GACAC,GACA;AACM,QAAAC,IAAaC,EAAYH,CAAQ,GACjCI,IAAaD,EAAYF,CAAQ,GAGjCI,IAAiB,CAAC,GAAG,oBAAI,IAAI,CAAC,GAAGb,EAAG,WAAW,GAAGU,CAAU,CAAC,CAAC,GAE9D,EAAE,OAAAP,GAAO,SAAAC,EAAA,IAAY5F,EAAyBqG,GAAgBD,CAAU;AAE3E,EAAAZ,EAAA,UAAU,OAAO,GAAGI,CAAO,GAC3BJ,EAAA,UAAU,IAAI,GAAGG,CAAK;AAC3B;AAEA,SAASQ,EAAYG,IAA6B,IAAI;AACpD,SAAO,MAAM,QAAQA,CAAO,IACxBA,EAAQ,OAAOlD,CAAgB,IAC/BkD,EAAQ,MAAM,KAAK,EAAE,OAAOlD,CAAgB;AAClD;ACnBgB,SAAAmD,GACdf,GACAgB,IAAoC,CAAC,GACrCC,IAAiC,IACjCC,IAAiC,CAAC,GAClCrH,GACA;AACA,QAAM,EAAE,OAAAsG,GAAO,SAAAC,GAAS,SAAAC,EAAY,IAAAzD,EAAYqE,GAAWC,CAAS;AAEpE,GAAC,GAAGd,GAAS,GAAGC,CAAO,EAAE;AAAA,IAAQ,CAAC3G,MAChCsG,EAAG,oBAAoBtG,GAAWsH,EAAatH,CAAS,CAAC;AAAA,EAC3D;AAEA,QAAMyH,IAAoC,CAAC;AAC3C,UAAC,GAAGhB,GAAO,GAAGE,CAAO,EAAE,QAAQ,CAAC3G,MAAc;AAC/B,IAAAyH,EAAAzH,CAAS,IAAID,EAAiBC,GAAWwH,EAAUxH,CAAS,GAAGsG,GAAInG,CAAa;AAAA,EAAA,CAC9F,GAEMsH;AACT;ACpBgB,SAAAC,GACdpB,GACAqB,GACAC,GACA;AACA,QAAM,EAAE,OAAAnB,GAAO,SAAAC,GAAS,SAAAC,EAAY,IAAAzD,EAAYyE,GAAUC,CAAQ;AAElE,EAAAlB,EAAQ,QAAQ,CAAClC,MAAUU,EAAYoB,GAAI9B,CAAK,CAAC,GACjD,CAAC,GAAGiC,GAAO,GAAGE,CAAO,EAAE,QAAQ,CAACnC,MAAUI,EAAW0B,GAAI9B,GAAOoD,EAASpD,CAAK,CAAC,CAAC;AAClF;ACGO,SAASqD,EACdC,GACAC,GACAC,GACA7H,GACA;AACA,MAAI,CAACwC,EAAmBmF,GAASC,CAAO,GAAG;AACnC,UAAA/F,IAAQ,MAAM,KAAKgG,EAAS,UAAU,EAAE,QAAQF,EAAQ,EAAE;AAChE,WAAAG,EAAaH,CAAO,GACT1C,EAAA2C,GAASC,GAAUhG,GAAO7B,CAAa,GAC3C4H;AAAA,EAAA;AAKL,SAFJA,EAAQ,KAAKD,EAAQ,IAEjBhE,EAAYiE,CAAO,KACrBG,GAAUJ,GAASC,CAAO,GACnBA,KAELzC,EAAsByC,CAAO,KAC/BI,GAAeL,GAASC,CAAO,GAExBA,MAGLrC,EAAeqC,CAAO,KACXK,GAAAN,GAASC,GAAS5H,CAAa,GAGhCkI,GAAAP,GAASC,GAAS5H,CAAa,GACtC4H;AACT;AAEA,SAASG,GAAUJ,GAAgBC,GAAgB;AAC3C,QAAA,EAAE,IAAAzB,MAAOwB,GACT,EAAE,WAAWQ,EAAc,IAAIR,EAAQ,OACvC,EAAE,WAAWS,EAAa,IAAIR,EAAQ;AAE5C,EAAIO,MAAkBC,MACpBjC,EAAG,YAAYiC;AAEnB;AAEA,SAASH,GAAaN,GAAgBC,GAAgB5H,GAA6C;AACjG,QAAMmG,IAAKwB,EAAQ,IACb,EAAE,OAAOhB,GAAU,OAAOa,GAAU,IAAIJ,GAAW,GAAGhB,MAAauB,EAAQ,OAC3E,EAAE,OAAOf,GAAU,OAAOa,GAAU,IAAIJ,GAAW,GAAGhB,MAAauB,EAAQ;AAEtE,EAAA1B,GAAAC,GAAIC,GAAUC,CAAQ,GACpBK,GAAAP,GAAIQ,GAAUC,CAAQ,GACvBW,GAAApB,GAAIqB,GAAUC,CAAQ,GAClCG,EAAQ,YAAYV,GAAYf,GAAIwB,EAAQ,WAAWP,GAAWC,GAAWrH,CAAa;AAC5F;AAEA,SAASgI,GAAeL,GAAgBC,GAAgB;AAChD,QAAA,EAAE,WAAA5B,MAAc2B,GAChB,EAAE,KAAAvE,GAAK,GAAGqC,MAAUmC,EAAQ;AAElC,EAAA5B,EAAU,YAAYP,CAAK,GAC3BmC,EAAQ,YAAY5B,GACpB4B,EAAQ,KAAK5B,EAAU;AACzB;AAEA,SAASkC,GACPP,GACAC,GACA5H,GACA;AACM,QAAAqI,IAAc5E,EAAkBkE,CAAO,GACvCW,IAAc7E,EAAkBmE,CAAO,GACvCC,IAAWF,EAAQ;AAEzB,EADgBzF,EAAoCmG,GAAaC,GAAa9F,CAAkB,EACxF,QAAQ,CAAC,EAAE,IAAA+F,GAAI,OAAA1G,GAAO,eAAAF,GAAe,MAAAD,QAAW;AAChD,UAAA8G,IAASxI,GAAe,UAAU;AAExC,YAAQuI,GAAI;AAAA,MACV,KAAKzH,EAAuB;AAC1B,QAAAmE,EAAWvD,GAAMmG,GAAUhG,IAAQ2G,GAAQxI,CAAa;AACxD;AAAA,MAEF,KAAKc,EAAuB;AAC1B,QAAAgH,EAAapG,CAAI;AACjB;AAAA,MAEF,KAAKZ,EAAuB,MAAM;AAChC,cAAM2H,IAAkBZ,EAAS,WAAWhG,IAAQ2G,CAAM;AAC1D,QAAAX,EAAS,aAAaQ,EAAY1G,CAAa,EAAE,IAAI8G,CAAe,GACpEf,EAASW,EAAY1G,CAAa,GAAG2G,EAAYzG,CAAK,GAAGgG,GAAU7H,CAAa;AAChF;AAAA,MAAA;AAAA,MAGF,KAAKc,EAAuB;AAC1B,QAAA4G,EAASW,EAAY1G,CAAa,GAAG2G,EAAYzG,CAAK,GAAGgG,GAAU7H,CAAa;AAChF;AAAA,IAAA;AAAA,EACJ,CACD;AACH;;;;;;sBCzGA0I,IAAiB,SAASC,EAAMxG,GAAGC,GAAG;AACpC,QAAID,MAAMC,EAAG,QAAO;AAEpB,QAAID,KAAKC,KAAK,OAAOD,KAAK,YAAY,OAAOC,KAAK,UAAU;AAC1D,UAAID,EAAE,gBAAgBC,EAAE,YAAa,QAAO;AAE5C,UAAIH,GAAQX,GAAGsH;AACf,UAAI,MAAM,QAAQzG,CAAC,GAAG;AAEpB,YADAF,IAASE,EAAE,QACPF,KAAUG,EAAE,OAAQ,QAAO;AAC/B,aAAKd,IAAIW,GAAQX,QAAQ;AACvB,cAAI,CAACqH,EAAMxG,EAAEb,CAAC,GAAGc,EAAEd,CAAC,CAAC,EAAG,QAAO;AACjC,eAAO;AAAA,MACb;AAII,UAAIa,EAAE,gBAAgB,OAAQ,QAAOA,EAAE,WAAWC,EAAE,UAAUD,EAAE,UAAUC,EAAE;AAC5E,UAAID,EAAE,YAAY,OAAO,UAAU,QAAS,QAAOA,EAAE,QAAO,MAAOC,EAAE,QAAS;AAC9E,UAAID,EAAE,aAAa,OAAO,UAAU,SAAU,QAAOA,EAAE,SAAQ,MAAOC,EAAE,SAAU;AAIlF,UAFAwG,IAAO,OAAO,KAAKzG,CAAC,GACpBF,IAAS2G,EAAK,QACV3G,MAAW,OAAO,KAAKG,CAAC,EAAE,OAAQ,QAAO;AAE7C,WAAKd,IAAIW,GAAQX,QAAQ;AACvB,YAAI,CAAC,OAAO,UAAU,eAAe,KAAKc,GAAGwG,EAAKtH,CAAC,CAAC,EAAG,QAAO;AAEhE,WAAKA,IAAIW,GAAQX,QAAQ,KAAI;AAC3B,YAAI8B,IAAMwF,EAAKtH,CAAC;AAEhB,YAAI,CAACqH,EAAMxG,EAAEiB,CAAG,GAAGhB,EAAEgB,CAAG,CAAC,EAAG,QAAO;AAAA,MACzC;AAEI,aAAO;AAAA,IACX;AAGE,WAAOjB,MAAIA,KAAKC,MAAIA;AAAA,EACrB;;;;ACtCM,MAAeyG,EAA0B;AAAA,EAC9CC,KAAa;AAAA,EACbC,KAAe;AAAA,EACfC,KAAmB;AAAA,EAEnB;AAAA,EACA;AAAA,EACA;AAAA,EAEAC,KAAiC,CAAC;AAAA,EAElC,YAAYxD,GAAgBI,GAAoB;AACzC,SAAA,QAAQJ,KAAU,CAAC,GACnB,KAAA,WAAWI,KAAY,CAAC;AAAA,EAAA;AAAA,EAG/B,IAAI,QAAQ;AACV,WAAO,KAAKoD;AAAA,EAAA;AAAA,EAGd,IAAI,WAAsB;AACxB,WAAK,KAAKF,KACHjF,EAAgB,KAAKiF,EAAK,IAC7B,KAAKG,OACL,CAAC,KAAKH,GAAM,EAAa,IAHL,CAAC;AAAA,EAGI;AAAA,EAG/B,IAAI,eAA+B;AAC1B,WAAA,KAAK,SAAS,CAAC,KAAK;AAAA,EAAA;AAAA,EAG7B,IAAI,SAAiB;AACnB,WAAOjF,EAAgB,KAAKiF,EAAK,IAC7B,MAAM,KAAK,KAAKC,GAAQ,UAAU,EAAE,QAAQ,KAAK,YAAY,IAC7D;AAAA,EAAA;AAAA,EAQN,YAAYvD,GAAwB;AAClC,UAAM0D,IAAW,EAAE,GAAG,KAAK,OAAO,GAAG1D,EAAM;AAC3C,IAAI2D,EAAO,KAAK,OAAOD,CAAQ,MAC/B,KAAK,QAAQA,GACb,KAAKE,GAAO;AAAA,EAAA;AAAA,EAGd,YAAYC,GAA0D;AACpE,UAAMC,IAAW,OAAOD,KAAU,aAAaA,EAAM,KAAK,KAAK,IAAI,EAAE,GAAG,KAAK,OAAO,GAAGA,EAAM;AAC7F,IAAIF,EAAO,KAAK,OAAOG,CAAQ,MAC/B,KAAK,QAAQA,GACb,KAAKF,GAAO;AAAA,EAAA;AAAA,EAGd,MAAMG,GAAiB3H,IAAgB,MAAM;AAC3C,QAAI,KAAKiH;AACD,YAAA,IAAI,MAAM,8BAA8B;AAE3C,SAAAC,KAAQ,KAAK,OAAO,GACzB9D,EAAW,KAAK8D,IAAOS,GAAQ3H,GAAO,IAAI,GAE1C,KAAK4H,GAAS,GACd,KAAKT,KAAUQ,GACf,KAAKV,KAAa,IAClB,KAAK,UAAU;AAAA,EAAA;AAAA,EAGjB,UAAU;AACJ,QAAA,CAAC,KAAKA;AACF,YAAA,IAAI,MAAM,0BAA0B;AAE5C,SAAKG,KAAQ,CAAC,GACdnB,EAAa,KAAKiB,EAAK,GACvB,KAAKA,KAAQ,MACb,KAAKC,KAAU,MACf,KAAKF,KAAa,IAClB,KAAK,YAAY;AAAA,EAAA;AAAA,EAGnBO,KAAS;AACH,QAAA,CAAC,KAAKP;AACF,YAAA,IAAI,MAAM,0BAA0B;AAEtC,UAAAY,IAAO,KAAK,OAAO;AACzB,SAAKX,KAAQrB,EAAS,KAAKqB,IAAOW,GAAM,KAAKV,IAAS,IAAI,GAC1D,KAAK,UAAU;AAAA,EAAA;AAAA,EAGjBS,KAAW;AACJ,SAAAE,GAAgB,KAAKZ,EAAK,GAC1B,KAAA,SAAS,QAAQ,CAAClF,MAAU;AAC/B,MAAIA,EAAM,OACR,KAAK8F,GAAgB9F,CAAK;AAAA,IAC5B,CACD;AAAA,EAAA;AAAA,EAGH8F,GAAgBjG,GAAc;AAC5B,IAAI6B,EAAe7B,CAAK,KAAKA,EAAM,OACjC,KAAKkG,GAAQlG,EAAM,KAAKA,EAAM,EAAa;AAAA,EAC7C;AAAA,EAGFkG,GAAQC,GAAa1D,GAAa;AAC5B,QAAA,KAAK8C,GAAMY,CAAG,GAAG;AACX,cAAA,KAAK,QAAQA,CAAG,kBAAkB;AAC1C;AAAA,IAAA;AAEG,SAAAZ,GAAMY,CAAG,IAAI1D;AAAA,EAAA;AAAA,EAGpB+C,KAAsC;AACpC,WAAOzF,EAAkB,KAAKsF,EAAK,EAAE,QAAQ,CAAClF,MACxCiG,EAAiBjG,EAAM,IAAI,IACtBA,EAAM,UAAU,WAElBA,EAAM,EACd;AAAA,EAAA;AAEL;AC3HO,SAASkG,GAA0C;AAAA,EACxD,QAAAC;AAAA,EACA,OAAAV;AAAA,EACA,SAAAW;AAAA,EACA,WAAAC,IAAY3H;AAAA,EACZ,aAAA4H,IAAc5H;AAAA,EACd,WAAA6H,IAAY7H;AACd,GAC+F;AAAA,EAC7F,MAAM8H,UAAsBxB,EAA0B;AAAA,IACpD,YAAYpD,GAAgBI,GAAoB;AAC9C,YAAMJ,GAAOI,CAAQ,GACrB,KAAK,QAAQyD,IAAQA,EAAM7D,CAAK,IAAK,CAAC;AAAA,IAAA;AAAA,IAGxC,SAAc;AACL,aAAAuE,EAAO,KAAK,MAAM,KAAK,OAAO,EAAE,UAAU,KAAK,UAAU;AAAA,IAAA;AAAA,IAGlE,YAAY;AACV,aAAO,QAAQ,QAAQE,EAAU,KAAK,IAAI,CAAC;AAAA,IAAA;AAAA,IAE7C,cAAc;AACZ,aAAO,QAAQ,QAAQC,EAAY,KAAK,IAAI,CAAC;AAAA,IAAA;AAAA,IAE/C,YAAY;AACV,aAAO,QAAQ,QAAQC,EAAU,KAAK,IAAI,CAAC;AAAA,IAAA;AAAA,EAC7C;AAGF,aAAWE,KAAcL,GAAS;AAChC,QAAI5G,EAAegH,GAAeC,CAAU,KAAKA,KAAcD,EAAc;AAC3E,YAAM,IAAI,MAAM,WAAWC,CAAU,qDAAqD;AAE3F,IAAAD,EAAc,UAAkBC,CAAU,IAAIL,EAAQK,CAAU;AAAA,EAAA;AAG5D,SAAAD;AACT;ACxCO,SAASE,GAAQ1E,GAAoC;AAC1D,SAAOA,EAAS,IAAI,CAAChC,MAAW2G,EAAQ3G,CAAK,IAAIA,IAAQ4G,GAAgB,OAAO5G,CAAK,CAAC,CAAE;AAC1F;AAEO,SAAS6G,GAAkB7E,GAAoD;AACpF,SAAK,MAAM,QAAQA,CAAQ,MACzBA,IAAW,CAACA,CAAQ,IAEf0E,GAAQ/J,EAAkBqF,CAAQ,CAAC;AAC5C;ACLa,MAAA8E,IAA2B,OAAO,IAAI,MAAM,GAC5CC,IAA+B,OAAO,IAAI,UAAU;AAwBjD,SAAAC,EACdjF,GACAH,GACAI,GACO;AACP,QAAM,EAAE,KAAKiF,GAAQ,GAAGC,EAAO,IAAItF,KAAS,CAAC,GAEvCuF,IAAqBN,GAAkB7E,KAAY,EAAE;AAEpD,SAAA;AAAA,IACL,UAAU;AAAA,IACV,MAAAD;AAAA,IACA,OAAOmF;AAAA,IACP,UAAUC;AAAA,IACV,KANU,OAAOF,KAAW,WAAWA,IAAS;AAAA,IAOhD,IAAI;AAAA,IACJ,WAAW;AAAA,IACX,WAAW;AAAA,EACb;AACF;AAEO,SAASL,GAAgB/J,GAAe;AAC7C,SAAOmK,EAAYF,GAAW,EAAE,WAAWjK,GAAO;AACpD;AACO,SAASuK,GAAoBpF,GAAkC;AAC7D,SAAAgF,EAAYD,GAAe,MAAM/E,CAAQ;AAClD;AAEO,SAAS2E,EAAQ9J,GAA6B;AAC5C,SAAAA,IAAQA,GAAO,aAAa,KAAO;AAC5C;AAEO,SAASiD,EAAYjD,GAA0B;AACpD,SAAO8J,EAAQ9J,CAAK,KAAKA,EAAM,SAASiK;AAC1C;AAEO,SAAS7G,EAAgBpD,GAA0B;AACxD,SAAO8J,EAAQ9J,CAAK,KAAKA,EAAM,SAASkK;AAC1C;AAEO,SAASrF,EAAe7E,GAA0B;AACvD,SAAO8J,EAAQ9J,CAAK,KAAK,OAAOA,EAAM,QAAS;AACjD;AAEO,SAASyE,EAAsBzE,GAA0B;AAC9D,SAAO8J,EAAQ9J,CAAK,KAAKoJ,EAAiBpJ,EAAM,IAAI;AACtD;AAEO,SAASoJ,EAAiBlE,GAAyD;AACxF,SAAOsF,EAAoBtF,CAAI,KAAKpC,EAAcqF,GAAWjD,CAAI;AACnE;AAEO,SAASsF,EAAoBtF,GAA+C;AACjF,SAAO,OAAOA,KAAS;AACzB;AChFO,SAASkC,EAAapE,GAAoB;AAC3C,EAAAyB,EAAsBzB,CAAK,IAC7ByH,GAAsBzH,CAAK,IAE3B0H,GAAoB1H,CAAK;AAE7B;AAKA,SAASyH,GAAsBzH,GAAoB;AACjD,EAAAA,EAAM,WAAW,QAAQ;AAC3B;AAKA,SAAS0H,GAAoB1H,GAAoB;AAC/C,QAAM,EAAE,IAAAyC,GAAI,UAAAN,GAAU,WAAAwF,EAAc,IAAA3H;AAEpC,EAAI2H,MACElF,aAAc,WAChB5F,EAAqB8K,GAAWlF,CAAE,GAEpCzC,EAAM,YAAY,OAGpBmC,EAAS,QAAQiC,CAAY,GAC7B3B,GAAI,OAAO;AACb;ACJgB,SAAAmF,GAAE1F,GAAWH,GAAaI,GAAmC;AAIvE,MAHA,OAAOD,KAAS,YAGhBkE,EAAiBlE,CAAI;AAChB,WAAAiF,EAAYjF,GAAMH,GAAOI,CAAQ;AAEtC,MAAAqF,EAAoBtF,CAAI;AAC1B,WAAOA,EAAKH,GAAO,EAAE,UAAAI,GAAU;AAGjC,QAAM,IAAI;AAAA,IACR,gHAAgH,OAAOD,CAAI,KAAKA,CAAI;AAAA,EACtI;AACF;AAEO,SAAS2F,GAAUC,GAAgC;AACxD,SAAOP,GAAoBO,CAAM;AACnC;AC5CgB,SAAAC,GAAkBC,GAA0CjG,IAAgB,MAAM;AAChG,MAAIoC,IAAoB,MACpB8D,IAAqB,IACrBjC,IAAc;AAElB,WAASkC,IAAQ;AACJ,IAAA/D,IAAA,MACC8D,IAAA,IACLjC,IAAA;AAAA,EAAA;AAGF,SAAA;AAAA,IACL,MAAMmC,GAA2B;AAC/B,UAAI,CAACA,GAAW;AACd,gBAAQ,KAAK,6CAA6C;AAC1D;AAAA,MAAA;AAEF,UAAIF;AACI,cAAA,IAAI,MAAM,oCAAoC;AAG3C,MAAA9D,IAAAgE,GACJnC,IAAA4B,GAAEI,GAAejG,CAAK,GAC7BR,EAAWyE,GAAM7B,CAAQ,GAEb8D,IAAA;AAAA,IACd;AAAA,IAEA,UAAU;AACR,UAAI,CAACA;AACG,cAAA,IAAI,MAAM,gCAAgC;AAElD,MAAA7D,EAAa4B,CAAI,GACXkC,EAAA;AAAA,IAAA;AAAA,EAEV;AACF;ACtCO,SAASE,GAASC,GAAoB,EAAE,UAAAlG,KAA8B;AAC3E,SAAO0F,GAAU1F,CAAQ;AAC3B;","x_google_ignoreList":[14]}